{"version":3,"file":"number-array-compute-DizSuNRq.js","names":["data: number[]","opts: NumbersComputeOptions"],"sources":["../../packages/numbers/src/number-array-compute.ts"],"sourcesContent":["import type { NumbersComputeOptions, NumbersComputeResult } from \"./types.js\";\n\n/**\n * Calculate the min, max, total, average and count of input array `data`.\n * ```js\n * const { total, min, max, avg, count } = numberArrayCompute([ 1, 2, 3 ]);\n * ```\n * @param data \n * @param opts \n * @returns \n */\nexport const numberArrayCompute = (data: number[], opts: NumbersComputeOptions = {}): NumbersComputeResult => {\n  if (data.length === 0) {\n    return {\n      total: Number.NaN,\n      min: Number.NaN,\n      max: Number.NaN,\n      avg: Number.NaN,\n      count: Number.NaN\n    };\n  }\n  const nonNumbers = opts.nonNumbers ?? `throw`;\n\n  let total = 0;\n  let min = Number.MAX_SAFE_INTEGER;\n  let max = Number.MIN_SAFE_INTEGER;\n  let count = 0;\n  for (let index = 0; index < data.length; index++) {\n    let value = data[ index ];\n    if (typeof value !== `number`) {\n      if (nonNumbers === `ignore`) continue;\n      if (nonNumbers === `throw`) throw new Error(`Param 'data' contains a non-number at index: ${ index.toString() }`);\n      if (nonNumbers === `nan`) value = Number.NaN;\n    }\n    if (Number.isNaN(value)) continue;\n    min = Math.min(min, value);\n    max = Math.max(max, value);\n    total += value;\n    count++;\n  }\n  return {\n    total, max, min, count,\n    avg: total / count\n  }\n}"],"mappings":";;;;;;;;;;AAWA,MAAa,qBAAqB,CAACA,MAAgBC,OAA8B,CAAE,MAA2B;AAC5G,KAAI,KAAK,WAAW,EAClB,QAAO;EACL,OAAO,OAAO;EACd,KAAK,OAAO;EACZ,KAAK,OAAO;EACZ,KAAK,OAAO;EACZ,OAAO,OAAO;CACf;CAEH,MAAM,aAAa,KAAK,eAAe;CAEvC,IAAI,QAAQ;CACZ,IAAI,MAAM,OAAO;CACjB,IAAI,MAAM,OAAO;CACjB,IAAI,QAAQ;AACZ,MAAK,IAAI,QAAQ,GAAG,QAAQ,KAAK,QAAQ,SAAS;EAChD,IAAI,QAAQ,KAAM;AAClB,aAAW,WAAW,SAAS;AAC7B,OAAI,gBAAgB,QAAS;AAC7B,OAAI,gBAAgB,OAAQ,OAAM,IAAI,OAAO,+CAAgD,MAAM,UAAU,CAAE;AAC/G,OAAI,gBAAgB,KAAM,SAAQ,OAAO;EAC1C;AACD,MAAI,OAAO,MAAM,MAAM,CAAE;AACzB,QAAM,KAAK,IAAI,KAAK,MAAM;AAC1B,QAAM,KAAK,IAAI,KAAK,MAAM;AAC1B,WAAS;AACT;CACD;AACD,QAAO;EACL;EAAO;EAAK;EAAK;EACjB,KAAK,QAAQ;CACd;AACF"}