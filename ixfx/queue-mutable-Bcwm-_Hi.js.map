{"version":3,"file":"queue-mutable-Bcwm-_Hi.js","names":[],"sources":["../../collections/dist/src/queue/queue-mutable.js"],"sourcesContent":["import {} from './iqueue-mutable.js';\nimport { enqueue, peek, dequeue, isEmpty, isFull } from './queue-fns.js';\nimport {} from './queue-types.js';\nimport { isEqualDefault } from '@ixfx/core';\nimport { SimpleEventEmitter } from '@ixfx/events'; //'../../Events.js';\n/**\n * Mutable queue that fires events when manipulated.\n *\n * Queues are useful if you want to treat 'older' or 'newer'\n * items differently. _Enqueing_ adds items at the back of the queue, while\n * _dequeing_ removes items from the front (ie. the oldest).\n *\n * ```js\n * const q = Queues.mutable();       // Create\n * q.enqueue(`a`, `b`);     // Add two strings\n * const front = q.dequeue();  // `a` is at the front of queue (oldest)\n * ```\n *\n * @example Cap size to 5 items, throwing away newest items already in queue.\n * ```js\n * const q = Queues.mutable({capacity: 5, discardPolicy: `newer`});\n * ```\n *\n * Events can be used to monitor data flows.\n * * 'enqueue': fires when item(s) are added\n * * 'dequeue': fires when an item is dequeued from front\n * * 'removed': fires when an item is dequeued, queue is cleared or .removeWhere is used to trim queue\n *\n * Each of the event handlers return the state of the queue as the 'finalData'\n * field.\n *\n * ```js\n * q.addEventListener(`enqueue`, e => {\n *  // e.added, e.finalData\n * });\n * q.addEventListener(`removed`, e => {\n *  // e.removed, e.finalData\n * });\n * q.addEventListener(`dequeue`, e=> {\n *  // e.removed, e.finalData\n * })\n * ```\n * @typeParam V - Data type of items\n */\nexport class QueueMutable extends SimpleEventEmitter {\n    options;\n    data;\n    eq;\n    constructor(opts = {}, data = []) {\n        super();\n        if (opts === undefined)\n            throw new Error(`opts parameter undefined`);\n        this.options = opts;\n        this.data = data;\n        this.eq = opts.eq ?? isEqualDefault;\n    }\n    clear() {\n        const copy = [...this.data];\n        this.data = [];\n        this.fireEvent(`removed`, { finalData: this.data, removed: copy });\n        this.onClear();\n    }\n    /**\n     * Called when all data is cleared\n     */\n    onClear() {\n    }\n    at(index) {\n        if (index >= this.data.length)\n            throw new Error(`Index outside bounds of queue`);\n        const v = this.data.at(index);\n        if (v === undefined)\n            throw new Error(`Index appears to be outside range of queue`);\n        return v;\n    }\n    enqueue(...toAdd) {\n        this.data = enqueue(this.options, this.data, ...toAdd);\n        const length = this.data.length;\n        this.onEnqueue(this.data, toAdd);\n        return length;\n    }\n    onEnqueue(result, attemptedToAdd) {\n        this.fireEvent(`enqueue`, { added: attemptedToAdd, finalData: result });\n    }\n    dequeue() {\n        const v = peek(this.options, this.data);\n        if (v === undefined)\n            return;\n        /* eslint-disable-next-line functional/immutable-data */\n        this.data = dequeue(this.options, this.data);\n        this.fireEvent(`dequeue`, { removed: v, finalData: this.data });\n        this.onRemoved([v], this.data);\n        return v;\n    }\n    onRemoved(removed, finalData) {\n        this.fireEvent(`removed`, { removed, finalData });\n    }\n    /**\n     * Removes values that match `predicate`.\n     * @param predicate\n     * @returns Returns number of items removed.\n     */\n    removeWhere(predicate) {\n        const countPre = this.data.length;\n        const toRemove = this.data.filter(v => predicate(v));\n        if (toRemove.length === 0)\n            return 0;\n        this.data = this.data.filter((element) => !predicate(element));\n        this.onRemoved(toRemove, this.data);\n        return countPre - this.data.length;\n    }\n    /**\n   * Return a copy of the array\n   * @returns\n   */\n    toArray() {\n        return [...this.data];\n    }\n    get isEmpty() {\n        return isEmpty(this.options, this.data);\n    }\n    get isFull() {\n        return isFull(this.options, this.data);\n    }\n    get length() {\n        return this.data.length;\n    }\n    get peek() {\n        return peek(this.options, this.data);\n    }\n}\n/**\n * Creates a new QueueMutable\n * @param options\n * @param startingItems\n * @returns\n */\nexport function mutable(options = {}, ...startingItems) {\n    return new QueueMutable({ ...options }, [...startingItems]);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,IAAa,eAAb,cAAkC,mBAAmB;CACjD;CACA;CACA;CACA,YAAY,OAAO,CAAE,GAAE,OAAO,CAAE,GAAE;EAC9B,OAAO;AACP,MAAI,SAAS,OACT,OAAM,IAAI,MAAM,CAAC,wBAAwB,CAAC;EAC9C,KAAK,UAAU;EACf,KAAK,OAAO;EACZ,KAAK,KAAK,KAAK,MAAM;CACxB;CACD,QAAQ;EACJ,MAAM,OAAO,CAAC,GAAG,KAAK,IAAK;EAC3B,KAAK,OAAO,CAAE;EACd,KAAK,UAAU,CAAC,OAAO,CAAC,EAAE;GAAE,WAAW,KAAK;GAAM,SAAS;EAAM,EAAC;EAClE,KAAK,SAAS;CACjB;;;;CAID,UAAU,CACT;CACD,GAAG,OAAO;AACN,MAAI,SAAS,KAAK,KAAK,OACnB,OAAM,IAAI,MAAM,CAAC,6BAA6B,CAAC;EACnD,MAAM,IAAI,KAAK,KAAK,GAAG,MAAM;AAC7B,MAAI,MAAM,OACN,OAAM,IAAI,MAAM,CAAC,0CAA0C,CAAC;AAChE,SAAO;CACV;CACD,QAAQ,GAAG,OAAO;EACd,KAAK,OAAO,QAAQ,KAAK,SAAS,KAAK,MAAM,GAAG,MAAM;EACtD,MAAM,SAAS,KAAK,KAAK;EACzB,KAAK,UAAU,KAAK,MAAM,MAAM;AAChC,SAAO;CACV;CACD,UAAU,QAAQ,gBAAgB;EAC9B,KAAK,UAAU,CAAC,OAAO,CAAC,EAAE;GAAE,OAAO;GAAgB,WAAW;EAAQ,EAAC;CAC1E;CACD,UAAU;EACN,MAAM,IAAI,KAAK,KAAK,SAAS,KAAK,KAAK;AACvC,MAAI,MAAM,OACN;EAEJ,KAAK,OAAO,QAAQ,KAAK,SAAS,KAAK,KAAK;EAC5C,KAAK,UAAU,CAAC,OAAO,CAAC,EAAE;GAAE,SAAS;GAAG,WAAW,KAAK;EAAM,EAAC;EAC/D,KAAK,UAAU,CAAC,CAAE,GAAE,KAAK,KAAK;AAC9B,SAAO;CACV;CACD,UAAU,SAAS,WAAW;EAC1B,KAAK,UAAU,CAAC,OAAO,CAAC,EAAE;GAAE;GAAS;EAAW,EAAC;CACpD;;;;;;CAMD,YAAY,WAAW;EACnB,MAAM,WAAW,KAAK,KAAK;EAC3B,MAAM,WAAW,KAAK,KAAK,OAAO,OAAK,UAAU,EAAE,CAAC;AACpD,MAAI,SAAS,WAAW,EACpB,QAAO;EACX,KAAK,OAAO,KAAK,KAAK,OAAO,CAAC,YAAY,CAAC,UAAU,QAAQ,CAAC;EAC9D,KAAK,UAAU,UAAU,KAAK,KAAK;AACnC,SAAO,WAAW,KAAK,KAAK;CAC/B;;;;;CAKD,UAAU;AACN,SAAO,CAAC,GAAG,KAAK,IAAK;CACxB;CACD,IAAI,UAAU;AACV,SAAO,QAAQ,KAAK,SAAS,KAAK,KAAK;CAC1C;CACD,IAAI,SAAS;AACT,SAAO,OAAO,KAAK,SAAS,KAAK,KAAK;CACzC;CACD,IAAI,SAAS;AACT,SAAO,KAAK,KAAK;CACpB;CACD,IAAI,OAAO;AACP,SAAO,KAAK,KAAK,SAAS,KAAK,KAAK;CACvC;AACJ;;;;;;;AAOD,SAAgB,QAAQ,UAAU,CAAE,GAAE,GAAG,eAAe;AACpD,QAAO,IAAI,aAAa,EAAE,GAAG,QAAS,GAAE,CAAC,GAAG,aAAc;AAC7D"}