{"version":3,"file":"index-CZIsUroQ.d.ts","names":["Listener","Events","ISimpleEventEmitter","K","ISimpleEventEmitter","SimpleEventEmitter","Events","K","SimpleEventEmitter"],"sources":["../../events/dist/src/types.d.ts","../../events/dist/src/simple-event-emitter.d.ts","../../events/dist/src/index.d.ts"],"sourcesContent":["export type Listener<Events> = (event: unknown, sender: ISimpleEventEmitter<Events>) => void;\nexport type ISimpleEventEmitter<Events> = {\n    addEventListener<K extends keyof Events>(type: K, listener: (event: Events[K], sender: ISimpleEventEmitter<Events>) => void): void;\n    removeEventListener<K extends keyof Events>(type: K, listener: (event: Events[K], sender: ISimpleEventEmitter<Events>) => void): void;\n};\n//# sourceMappingURL=types.d.ts.map","import type { ISimpleEventEmitter } from \"./types.js\";\nexport declare class SimpleEventEmitter<Events> implements ISimpleEventEmitter<Events> {\n    #private;\n    dispose(): void;\n    get isDisposed(): boolean;\n    /**\n     * Fire event\n     * @param type Type of event\n     * @param args Arguments for event\n     * @returns\n     */\n    protected fireEvent<K extends keyof Events>(type: K, args: Events[K]): void;\n    /**\n     * Adds event listener.\n     *\n     * @throws Error if emitter is disposed\n     * @typeParam K - Events\n     * @param name Event name\n     * @param listener Event handler\n     */\n    addEventListener<K extends keyof Events>(name: K, listener: (event: Events[K], sender: SimpleEventEmitter<Events>) => void): void;\n    /**\n     * Remove event listener\n     *\n     * @param listener\n     */\n    removeEventListener<K extends keyof Events>(type: K, listener: (event: Events[K], sender: SimpleEventEmitter<Events>) => void): void;\n    /**\n     * Clear all event listeners\n     * @private\n     */\n    clearEventListeners(): void;\n}\n//# sourceMappingURL=simple-event-emitter.d.ts.map","export { SimpleEventEmitter } from './simple-event-emitter.js';\nexport * from './types.js';\n//# sourceMappingURL=index.d.ts.map"],"mappings":";KAAYA,4CAA4CI,oBAAoBE;KAChEF;mCACyBE,cAAcC,qBAAqBD,OAAOC,YAAYH,oBAAoBE;EAFnGN,mBAAQ,CAAA,UAAA,MAGoBM,MAHpB,CAAA,CAAA,IAAA,EAGkCC,CAHlC,EAAA,QAAA,EAAA,CAAA,KAAA,EAGuDD,MAHvD,CAG8DC,CAH9D,CAAA,EAAA,MAAA,EAG0EH,mBAH1E,CAG8FE,MAH9F,CAAA,EAAA,GAAA,IAAA,CAAA,EAAA,IAAA;CAAA;;;;cCCCE,sCAAsCJ,oBAAoBE;;EDDnEN,OAAAA,CAAAA,CAAAA,EAAQ,IAAA;EAAA,IAAA,UAAA,CAAA,CAAA,EAAA,OAAA;EAAA;;AAAuD;AAC3E;;;EAC2C,UAAQO,SAAAA,CAAAA,UAAAA,MCSXD,MDTWC,CAAAA,CAAAA,IAAAA,ECSGA,CDTHA,EAAAA,IAAAA,ECSYD,MDTZC,CCSmBA,CDTnBA,CAAAA,CAAAA,EAAAA,IAAAA;EAAC;;;;;;;;EAC+B,gBAA+BD,CAAAA,UAAAA,MCiB7EA,MDjB6EA,CAAAA,CAAAA,IAAAA,ECiB/DC,CDjB+DD,EAAAA,QAAAA,EAAAA,CAAAA,KAAAA,ECiB1CA,MDjB0CA,CCiBnCC,CDjBmCD,CAAAA,EAAAA,MAAAA,ECiBvBE,kBDjBuBF,CCiBJA,MDjBIA,CAAAA,EAAAA,GAAAA,IAAAA,CAAAA,EAAAA,IAAAA;EAAM;AAAP;;;;ECF5FE,mBAAAA,CAAAA,UAAkB,MAyBCF,MAzBD,CAAA,CAAA,IAAA,EAyBeC,CAzBf,EAAA,QAAA,EAAA,CAAA,KAAA,EAyBoCD,MAzBpC,CAyB2CC,CAzB3C,CAAA,EAAA,MAAA,EAyBuDC,kBAzBvD,CAyB0EF,MAzB1E,CAAA,EAAA,GAAA,IAAA,CAAA,EAAA,IAAA;EAAA;;;;EAUgB,mBAAQA,CAAAA,CAAAA,EAAAA,IAAAA"}