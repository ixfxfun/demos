{"version":3,"file":"multiply-C6BAKtKA.js","names":["isPlaceholder","guard","PointsGuard","b","a"],"sources":["../../geometry/dist/src/point/guard.js","../../geometry/dist/src/rect/guard.js","../../geometry/dist/src/point/point-type.js","../../geometry/dist/src/point/get-point-parameter.js","../../geometry/dist/src/point/subtract.js","../../geometry/dist/src/point/empty.js","../../geometry/dist/src/point/multiply.js"],"sourcesContent":["import { numberTest, resultThrow } from '@ixfx/guards';\n/**\n * Returns true if xy (and z, if present) are _null_.\n * @param p\n * @returns\n */\nexport const isNull = (p) => {\n    if (isPoint3d(p)) {\n        if (p.z !== null)\n            return false;\n    }\n    return p.x === null && p.y === null;\n};\n/***\n * Returns true if either x, y, z isNaN.\n */\nexport const isNaN = (p) => {\n    if (isPoint3d(p)) {\n        if (!Number.isNaN(p.z))\n            return false;\n    }\n    return Number.isNaN(p.x) || Number.isNaN(p.y);\n};\n/**\n * Throws an error if point is invalid\n * @param p\n * @param name\n */\nexport function guard(p, name = `Point`) {\n    if (p === undefined) {\n        throw new Error(`'${name}' is undefined. Expected {x,y} got ${JSON.stringify(p)}`);\n    }\n    if (p === null) {\n        throw new Error(`'${name}' is null. Expected {x,y} got ${JSON.stringify(p)}`);\n    }\n    if (p.x === undefined) {\n        throw new Error(`'${name}.x' is undefined. Expected {x,y} got ${JSON.stringify(p)}`);\n    }\n    if (p.y === undefined) {\n        throw new Error(`'${name}.y' is undefined. Expected {x,y} got ${JSON.stringify(p)}`);\n    }\n    if (typeof p.x !== `number`) {\n        throw new TypeError(`'${name}.x' must be a number. Got ${typeof p.x}`);\n    }\n    if (typeof p.y !== `number`) {\n        throw new TypeError(`'${name}.y' must be a number. Got ${typeof p.y}`);\n    }\n    if (p.z !== undefined) {\n        if (typeof p.z !== `number`)\n            throw new TypeError(`${name}.z must be a number. Got: ${typeof p.z}`);\n        if (Number.isNaN(p.z))\n            throw new Error(`'${name}.z' is NaN. Got: ${JSON.stringify(p)}`);\n    }\n    if (p.x === null)\n        throw new Error(`'${name}.x' is null`);\n    if (p.y === null)\n        throw new Error(`'${name}.y' is null`);\n    if (Number.isNaN(p.x))\n        throw new Error(`'${name}.x' is NaN`);\n    if (Number.isNaN(p.y))\n        throw new Error(`'${name}.y' is NaN`);\n}\n/**\n * Throws if parameter is not a valid point, or either x or y is 0\n * @param pt\n * @returns\n */\nexport const guardNonZeroPoint = (pt, name = `pt`) => {\n    guard(pt, name);\n    resultThrow(numberTest(pt.x, `nonZero`, `${name}.x`), numberTest(pt.y, `nonZero`, `${name}.y`), () => {\n        if (typeof pt.z !== `undefined`) {\n            return numberTest(pt.z, `nonZero`, `${name}.z`);\n        }\n    });\n    return true;\n};\n/**\n * Returns _true_ if `p` has x & y properties.\n * Returns _false_ if `p` is undefined, null or does not contain properties.\n * Use {@link isPoint3d} to check further check for `z`.\n * @param p\n * @returns\n */\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport function isPoint(p) {\n    if (p === undefined)\n        return false;\n    if (p === null)\n        return false;\n    if (p.x === undefined)\n        return false;\n    if (p.y === undefined)\n        return false;\n    return true;\n}\n/**\n * Returns _true_ if `p` has x, y, & z properties.\n * Returns _false_ if `p` is undefined, null or does not contain properties.\n * @param p\n * @returns\n */\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport const isPoint3d = (p) => {\n    if (p === undefined)\n        return false;\n    if (p === null)\n        return false;\n    if (p.x === undefined)\n        return false;\n    if (p.y === undefined)\n        return false;\n    if (p.z === undefined)\n        return false;\n    return true;\n};\n/**\n * Returns true if both xy (and z, if present) are 0.\n * Use `Points.Empty` to return an empty point.\n * @param p\n * @returns\n */\nexport const isEmpty = (p) => {\n    if (isPoint3d(p)) {\n        if (p.z !== 0)\n            return false;\n    }\n    return p.x === 0 && p.y === 0;\n};\n/**\n * Returns true if point is a placeholder, where xy (and z, if present)\n * are `NaN`.\n *\n * Use Points.Placeholder to return a placeholder point.\n * @param p\n * @returns\n */\nexport const isPlaceholder = (p) => {\n    if (isPoint3d(p)) {\n        if (!Number.isNaN(p.z))\n            return false;\n    }\n    return Number.isNaN(p.x) && Number.isNaN(p.y);\n};\n","import { guard as PointsGuard } from '../point/guard.js';\n/**\n * Throws an error if the dimensions of the rectangle are undefined, NaN or negative.\n * @param d\n * @param name\n */\nexport const guardDim = (d, name = `Dimension`) => {\n    if (d === undefined)\n        throw new Error(`${name} is undefined`);\n    if (Number.isNaN(d))\n        throw new Error(`${name} is NaN`);\n    if (d < 0)\n        throw new Error(`${name} cannot be negative`);\n};\n/**\n * Throws an error if rectangle is missing fields or they\n * are not valid.\n *\n * Checks:\n * * `width` and `height` must be defined on `rect`\n * * dimensions (w & h) must not be NaN\n * * dimensions (w & h) must not be negative\n *\n * If `rect` has x,y, this value is checked as well.\n * @param rect\n * @param name\n */\nexport const guard = (rect, name = `rect`) => {\n    if (rect === undefined)\n        throw new Error(`{$name} undefined`);\n    if (isPositioned(rect))\n        PointsGuard(rect, name);\n    guardDim(rect.width, name + `.width`);\n    guardDim(rect.height, name + `.height`);\n};\n/**\n * Returns a positioned rect or if it's not possible, throws an error.\n *\n * If `rect` does not have a position, `origin` is used.\n * If `rect` is positioned and `origin` is provided, returned result uses `origin` as x,y instead.\n * ```js\n * // Returns input because it's positioned\n * getRectPositioned({ x:1, y:2, width:10, height:20 });\n *\n * // Returns { x:1, y:2, width:10, height:20 }\n * getRectPositioned({ width:10, height:20 }, { x:1, y:2 });\n *\n * // Throws, because we have no point\n * getRectPositioned({width:10,height:20})\n * ```\n * @param rect\n * @param origin\n * @returns\n */\nexport const getRectPositioned = (rect, origin) => {\n    guard(rect);\n    if (isPositioned(rect) && origin === undefined) {\n        return rect;\n    }\n    if (origin === undefined)\n        throw new Error(`Unpositioned rect needs origin parameter`);\n    return Object.freeze({ ...rect, ...origin });\n};\n/**\n * Throws an error if `rect` is does not have a position, or\n * is an invalid rectangle\n * @param rect\n * @param name\n */\nexport const guardPositioned = (rect, name = `rect`) => {\n    if (!isPositioned(rect))\n        throw new Error(`Expected ${name} to have x,y`);\n    guard(rect, name);\n};\n/**\n * Returns _true_ if `rect` has width and height values of 0.\n * Use Rects.Empty or Rects.EmptyPositioned to generate an empty rectangle.\n * @param rect\n * @returns\n */\nexport const isEmpty = (rect) => rect.width === 0 && rect.height === 0;\n/**\n * Returns _true_ if `rect` is a placeholder, with both width and height values of NaN.\n * Use Rects.Placeholder or Rects.PlaceholderPositioned to generate a placeholder.\n * @param rect\n * @returns\n */\nexport const isPlaceholder = (rect) => Number.isNaN(rect.width) && Number.isNaN(rect.height);\n/**\n * Returns _true_ if `rect` has position (x,y) fields.\n * @param rect Point, Rect or RectPositiond\n * @returns\n */\nexport const isPositioned = (rect) => rect.x !== undefined && rect.y !== undefined;\n/**\n * Returns _true_ if `rect` has width and height fields.\n * @param rect\n * @returns\n */\nexport const isRect = (rect) => {\n    if (rect === undefined)\n        return false;\n    if (rect.width === undefined)\n        return false;\n    if (rect.height === undefined)\n        return false;\n    return true;\n};\n/**\n * Returns _true_ if `rect` is a positioned rectangle\n * Having width, height, x and y properties.\n * @param rect\n * @returns\n */\nexport const isRectPositioned = (rect) => isRect(rect) && isPositioned(rect);\n","/**\n * Placeholder point: `{ x: NaN, y: NaN }`\n * Use `isPlaceholder` to check if a point is a placeholder.\n * Use `Placeholder3d` get a point with `z` property.\n */\n//eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Placeholder = Object.freeze({ x: Number.NaN, y: Number.NaN });\n/**\n * Placeholder point: `{x: NaN, y:NaN, z:NaN }`\n * Use `isPlaceholder` to check if a point is a placeholder.\n * Use `Placeholder` to get a point without `z` property.\n */\nexport const Placeholder3d = Object.freeze({ x: Number.NaN, y: Number.NaN, z: Number.NaN });\n","import { isPoint, isPoint3d } from \"./guard.js\";\nexport function getTwoPointParameters(a1, ab2, ab3, ab4, ab5, ab6) {\n    if (isPoint3d(a1) && isPoint3d(ab2))\n        return [a1, ab2];\n    if (isPoint(a1) && isPoint(ab2))\n        return [a1, ab2];\n    if (isPoint3d(a1)) {\n        const b = {\n            x: ab2,\n            y: ab3,\n            z: ab4\n        };\n        if (!isPoint3d(b))\n            throw new Error(`Expected x, y & z parameters`);\n        return [a1, b];\n    }\n    if (isPoint(a1)) {\n        const b = {\n            x: ab2,\n            y: ab3\n        };\n        if (!isPoint(b))\n            throw new Error(`Expected x & y parameters`);\n        return [a1, b];\n    }\n    if (typeof ab5 !== `undefined` && typeof ab4 !== `undefined`) {\n        const a = {\n            x: a1,\n            y: ab2,\n            z: ab3\n        };\n        const b = {\n            x: ab4,\n            y: ab5,\n            z: ab6\n        };\n        if (!isPoint3d(a))\n            throw new Error(`Expected x,y,z for first point`);\n        if (!isPoint3d(b))\n            throw new Error(`Expected x,y,z for second point`);\n        return [a, b];\n    }\n    const a = {\n        x: a1,\n        y: ab2\n    };\n    const b = {\n        x: ab3,\n        y: ab4\n    };\n    if (!isPoint(a))\n        throw new Error(`Expected x,y for first point`);\n    if (!isPoint(b))\n        throw new Error(`Expected x,y for second point`);\n    return [a, b];\n}\n/**\n * Returns a Point form of either a point, x,y params or x,y,z params.\n * If parameters are undefined, an empty point is returned (0, 0)\n * @ignore\n * @param a\n * @param b\n * @returns\n */\nexport function getPointParameter(a, b, c) {\n    if (a === undefined)\n        return { x: 0, y: 0 };\n    if (Array.isArray(a)) {\n        if (a.length === 0)\n            return Object.freeze({ x: 0, y: 0 });\n        if (a.length === 1)\n            return Object.freeze({ x: a[0], y: 0 });\n        if (a.length === 2)\n            return Object.freeze({ x: a[0], y: a[1] });\n        if (a.length === 3)\n            return Object.freeze({ x: a[0], y: a[1], z: a[2] });\n        throw new Error(`Expected array to be 1-3 elements in length. Got ${a.length}.`);\n    }\n    if (isPoint(a)) {\n        return a;\n    }\n    else if (typeof a !== `number` || typeof b !== `number`) {\n        throw new TypeError(`Expected point or x,y as parameters. Got: a: ${JSON.stringify(a)} b: ${JSON.stringify(b)}`);\n    }\n    // x,y,z\n    if (typeof c === `number`) {\n        return Object.freeze({ x: a, y: b, z: c });\n    }\n    // x,y\n    return Object.freeze({ x: a, y: b });\n}\n","import { getTwoPointParameters } from \"./get-point-parameter.js\";\nimport { guard, isPoint3d } from \"./guard.js\";\n/**\n * Returns a Point with the x,y,z values of two points subtracted (a-b).\n *\n * `z` parameter is used if present. Uses a default value of 0 for 'z' when subtracting a 2D point with a 3D one.\n *\n * Examples:\n *\n * ```js\n * subtract(ptA, ptB);\n * subtract(x1, y1, x2, y2);\n * subtract(ptA, x2, y2);\n * ```\n */\nexport function subtract(a1, ab2, ab3, ab4, ab5, ab6) {\n    const [ptA, ptB] = getTwoPointParameters(a1, ab2, ab3, ab4, ab5, ab6);\n    guard(ptA, `a`);\n    guard(ptB, `b`);\n    const pt = {\n        x: ptA.x - ptB.x,\n        y: ptA.y - ptB.y,\n    };\n    if (isPoint3d(ptA) || isPoint3d(ptB)) {\n        pt.z = (ptA.z ?? 0) - (ptB.z ?? 0);\n    }\n    ;\n    return Object.freeze(pt);\n}\n;\n","/**\n * An empty point of `{ x: 0, y: 0 }`.\n *\n * Use `isEmpty` to check if a point is empty.\n * Use `Empty3d` to get an empty point with `z`.\n */\nexport const Empty = { x: 0, y: 0 };\n/**\n * Returns { x:1, y:1 }\n */\nexport const Unit = { x: 1, y: 1 };\n/**\n * An empty Point of `{ x: 0, y: 0, z: 0}`\n * Use `isEmpty` to check if a point is empty.\n * Use `Empty` to get an empty point without `z`.\n */\nexport const Empty3d = { x: 0, y: 0, z: 0 };\n/**\n * Returns { x:1,y:1,z:1 }\n */\nexport const Unit3d = { x: 1, y: 1, z: 1 };\n","import { getTwoPointParameters } from \"./get-point-parameter.js\";\nimport { guard, isPoint3d } from \"./guard.js\";\n/**\n * Returns a Point with the x,y,z values of two points multiply (a/b).\n *\n * `z` parameter is used, if present. Uses a default value of 0 for 'z' when multiplying a 2D point with a 3D one.\n *\n * Examples:\n *\n * ```js\n * multiply(ptA, ptB);\n * multiply(x1, y1, x2, y2);\n * multiply(ptA, x2, y2);\n * ```\n */\nexport function multiply(a1, ab2, ab3, ab4, ab5, ab6) {\n    const [ptA, ptB] = getTwoPointParameters(a1, ab2, ab3, ab4, ab5, ab6);\n    guard(ptA, `a`);\n    guard(ptB, `b`);\n    const pt = {\n        x: ptA.x * ptB.x,\n        y: ptA.y * ptB.y,\n    };\n    if (isPoint3d(ptA) || isPoint3d(ptB)) {\n        pt.z = (ptA.z ?? 0) * (ptB.z ?? 0);\n    }\n    ;\n    return Object.freeze(pt);\n}\n;\n/**\n * Multiplies all components by `v`.\n * Existing properties of `pt` are maintained.\n *\n * ```js\n * multiplyScalar({ x:2, y:4 }, 2);\n * // Yields: { x:4, y:8 }\n * ```\n * @param pt Point\n * @param v Value to multiply by\n * @returns\n */\nexport const multiplyScalar = (pt, v) => {\n    return isPoint3d(pt) ? Object.freeze({\n        ...pt,\n        x: pt.x * v,\n        y: pt.y * v,\n        z: pt.z * v,\n    }) : Object.freeze({\n        ...pt,\n        x: pt.x * v,\n        y: pt.y * v,\n    });\n};\n"],"mappings":"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"}