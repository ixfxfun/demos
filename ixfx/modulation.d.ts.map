{"version":3,"file":"modulation.d.ts","names":["HasCompletion","Interval","TimerSource","Timer","CompletionTimer","ModulationTimer","TimerOpts","RelativeTimerOpts","hasElapsed","ofTotal","ofTotalTicks","timerAlwaysDone","timerNeverDone","relative","Partial","frequencyTimer","elapsedMillisecondsAbsolute","elapsedTicksAbsolute","timerWithFunction"],"sources":["../../modulation/src/types.ts","../../modulation/src/source/ticks.ts","../../modulation/src/source/time.ts","../../modulation/src/source/per-second.ts","../../modulation/src/source/index.ts","../../flow/dist/src/timer.d.ts","../../modulation/src/oscillator.ts","../../modulation/src/easing/easings-named.ts","../../modulation/src/easing/line.ts","../../modulation/src/easing/types.ts","../../modulation/src/easing/index.ts","../../modulation/src/envelope/Types.ts","../../modulation/src/envelope/AdsrBase.ts","../../modulation/src/envelope/Adsr.ts","../../modulation/src/envelope/index.ts","../../modulation/src/forces.ts","../../modulation/src/cubic-bezier.ts","../../modulation/src/drift.ts","../../modulation/src/gaussian.ts","../../modulation/src/interpolate.ts","../../modulation/src/jitter.ts","../../modulation/src/mix.ts","../../modulation/src/modulator-timed.ts","../../modulation/src/no-op.ts","../../modulation/src/ping-pong.ts","../../modulation/src/spring.ts","../../modulation/src/timing-source-factory.ts","../../modulation/src/waveforms.ts","../../modulation/src/weighted-average.ts","../../modulation/src/weighted-random.ts"],"sourcesContent":["import { type HasCompletion, type Interval } from '@ixfx/core';\n/**\n * Creates a timer\n */\nexport type TimerSource = () => Timer;\n/**\n * A timer instance.\n * {@link CompletionTimer} also contains an 'isDone' field.\n *\n * Implementations: {@link elapsedMillisecondsAbsolute}, {@link elapsedTicksAbsolute}, {@link frequencyTimer}\n */\nexport type Timer = {\n    reset(): void;\n    get elapsed(): number;\n};\n/**\n * A {@link Timer} that has a sense of completion, when `isDone` returns _true_.\n * See {@link relative}\n */\nexport type CompletionTimer = Timer & {\n    /**\n     * Returns _true_ if this timer has completed.\n     */\n    get isDone(): boolean;\n};\nexport type ModulationTimer = CompletionTimer & {\n    mod(amt: number): void;\n};\nexport type TimerOpts = {\n    /**\n     * Timer to use. By default {@link elapsedMillisecondsAbsolute}.\n     */\n    readonly timer: Timer;\n};\n/**\n * Options for relative timer\n */\nexport type RelativeTimerOpts = TimerOpts & {\n    /**\n     * If true, returned value will be clamped to 0..1. False by default\n     */\n    readonly clampValue: boolean;\n    readonly wrapValue: boolean;\n};\n/**\n * A function that returns _true_ when an interval has elapsed\n *\n * ```js\n * const oneSecond = hasElapsed(1000);\n *\n * // Keep calling to check if time has elapsed.\n * // Will return _true_ when it has\n * oneSecond();\n * ```\n *\n * @param elapsed\n * @returns\n */\nexport declare function hasElapsed(elapsed: Interval): () => boolean;\n/**\n * Returns a function that returns the percentage of timer completion.\n * Starts when return function is first invoked.\n *\n * ```js\n * const timer = Flow.ofTotal(1000);\n *\n * // Call timer() to find out the completion\n * timer(); // Returns 0..1\n * ```\n *\n * Note that timer can exceed 1 (100%). To cap it:\n * ```js\n * Flow.ofTotal(1000, { clampValue: true });\n * ```\n *\n * Takes an {@link Interval} for more expressive time:\n * ```js\n * const timer = Flow.ofTotal({ mins: 4 });\n * ```\n *\n * Is a simple wrapper around {@link relative}.\n * @param duration\n * @see {@link ofTotalTicks} - Use ticks instead of time\n * @see {@link hasElapsed} - Simple _true/false_ if interval has elapsed\n * @returns\n */\nexport declare function ofTotal(duration: Interval, opts?: {\n    readonly clampValue?: boolean;\n    readonly wrapValue?: boolean;\n}): () => number;\n/**\n * Returns a function that returns the percentage (0..1) of timer completion.\n * Uses 'ticks' as a measure. Use {@link ofTotal} if you want time-based.\n *\n * ```js\n * const timer = Flow.ofTotalTicks(1000);\n * timer(); // Returns 0..1\n * ```\n *\n * Note that timer can exceed 1 (100%). To cap it:\n * ```js\n * Flow.ofTotalTicks(1000, { clampValue: true });\n * ```\n *\n * This is a a simple wrapper around {@link relative}.\n * @see {@link ofTotal}\n * @see {@link hasElapsed}: Simple _true/false_ if interval has elapsed\n * @param totalTicks\n * @returns\n */\nexport declare function ofTotalTicks(totalTicks: number, opts?: {\n    readonly clampValue?: boolean;\n    readonly wrapValue?: boolean;\n}): () => number;\n/**\n * Returns a {@link ModulationTimer} that is always at 100%.\n * Opposite: {@link timerNeverDone}.\n * @returns\n */\nexport declare const timerAlwaysDone: () => ModulationTimer;\n/**\n * Returns a {@link ModulationTimer} that is always at 0%.\n * Opposite: {@link timerAlwaysDone}.\n * @returns\n */\nexport declare const timerNeverDone: () => ModulationTimer;\n/**\n * Wraps a timer, returning a relative elapsed value based on\n * a given total. ie. percentage complete toward a total value.\n * This is useful because other parts of code don't need to know\n * about the absolute time values, you get a nice relative completion number.\n *\n * If no timer is specified, a milliseconds-based timer is used.\n *\n * ```js\n * const t = relative(1000);\n * t.elapsed;   // returns % completion (0...1)\n * ```\n * It can also use a tick based timer\n * ```js\n * // Timer that is 'done' at 100 ticks\n * const t = relative(100, { timer: ticksElapsedTimer() });\n * ```\n *\n * Additional fields/methods on the timer instance\n * ```js\n * t.isDone;  // _true_ if .elapsed has reached (or exceeded) 1\n * t.reset(); // start from zero again\n * ```\n *\n * Options:\n * * timer: timer to use. If not specified, `elapsedMillisecondsAbsolute()` is used.\n * * clampValue: if _true_, return value is clamped to 0..1 (default: _false_)\n * * wrapValue: if _true_, return value wraps around continously from 0..1..0 etc. (default: _false_)\n *\n * Note that `clampValue` and `wrapValue` are mutually exclusive: only one can be _true_, but both can be _false_.\n *\n * With options\n * ```js\n * // Total duration of 1000 ticks\n * const t = Timer.relative(1000, { timer: ticksElapsedTimer(); clampValue:true });\n * ```\n *\n * If `total` is Infinity, a 'always completed; timer is returned. Use a value of `NaN` for a\n * timer that always returns 0.\n * @private\n * @param total Total (of milliseconds or ticks, depending on timer source)\n * @param options Options\n * @returns Timer\n */\nexport declare const relative: (total: number, options?: Partial<RelativeTimerOpts>) => ModulationTimer;\n/**\n * A timer based on frequency: cycles per unit of time. These timers return a number from\n * 0..1 indicating position with a cycle.\n *\n * In practice, timers are used to 'drive' something like an Oscillator.\n *\n * By default it uses elapsed clock time as a basis for frequency. ie., cycles per second.\n *\n * It returns a `ModulationTimer`, which allows for a modulation amount to be continually applied\n * to the calculation of the 'position' within a cycle.\n *\n * @example Prints around 0/0.5 each second, as timer is half a cycle per second\n * ```js\n * const t = frequencyTimer(0.5);\n * setInterval(() => {\n *  console.log(t.elapsed);\n * }, 1000);\n * ```\n * @param frequency Cycles\n * @param options Options for timer\n * @returns\n */\nexport declare const frequencyTimer: (frequency: number, options?: Partial<TimerOpts>) => ModulationTimer;\n/**\n * A timer that uses clock time. Start time is from the point of invocation.\n *\n * ```js\n * const t = elapsedMillisecondsAbsolute();\n * t.reset(); // reset start\n * t.elapsed; // milliseconds since start\n * ```\n * @returns {Timer}\n * @see {ticksElapsedTimer}\n */\nexport declare const elapsedMillisecondsAbsolute: () => Timer;\n/**\n * A timer that progresses with each call to `elapsed`.\n *\n * The first call to elapsed will return 1.\n *\n * ```js\n * const timer = elapsedTicksAbsolute();\n * timer.reset(); // Reset to 0\n * timer.elapsed; // Number of ticks (and also increment ticks)\n * timer.peek;    // Number of ticks (without incrementing)\n * ```\n *\n * Like other {@link Timer} functions, returns with a `isDone` field,\n * but this will always return _true_.\n * @returns {Timer}\n * @see {elapsedMillisecondsAbsolute}\n */\nexport declare const elapsedTicksAbsolute: () => Timer & {\n    peek: number;\n};\n/**\n * Wraps `timer`, computing a value based on its elapsed value.\n * `fn` creates this value.\n *\n * ```js\n * const t = timerWithFunction(v=>v/2, relativeTimer(1000));\n * t.compute();\n * ```\n *\n * In the above case, `relativeTimer(1000)` creates a timer that goes\n * from 0..1 over one second. `fn` will divide that value by 2, so\n * `t.compute()` will yield values 0..0.5.\n *\n * @param fn\n * @param timer\n * @returns\n */\nexport declare const timerWithFunction: (fn: ((v: number) => number), timer: CompletionTimer) => HasCompletion & CompletionTimer & {\n    compute: () => number;\n};\n//# sourceMappingURL=timer.d.ts.map"],"mappings":"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"}