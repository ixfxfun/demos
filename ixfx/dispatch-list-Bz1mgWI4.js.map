{"version":3,"file":"dispatch-list-Bz1mgWI4.js","names":["#handlers","#counter","#id"],"sources":["../../flow/dist/src/dispatch-list.js"],"sourcesContent":["/**\n * Maintains a list of listeners to receive data\n *\n * ```js\n * const d = new DispatchList();\n *\n * // Eg: add a listener\n * d.add(v => {\n *  // Handle a value\n * });\n *\n * // Eg. send a value to all listeners\n * d.notify(`some value`);\n * ```\n */\nexport class DispatchList {\n    #handlers;\n    #counter = 0;\n    #id = Math.floor(Math.random() * 100);\n    constructor() {\n        this.#handlers = [];\n    }\n    /**\n     * Returns _true_ if list is empty\n     * @returns\n     */\n    isEmpty() {\n        return this.#handlers.length === 0;\n    }\n    /**\n     * Adds a handler. You get back an id which can be used\n     * to remove the handler later.\n     *\n     * Handlers can be added with 'once' flag set to _true_. This will\n     * automatically remove them after the first value is sent to them.\n     * @param handler\n     * @param options\n     * @returns\n     */\n    add(handler, options = {}) {\n        this.#counter++;\n        const once = options.once ?? false;\n        const wrap = {\n            id: `${this.#id} - ${this.#counter}`,\n            handler,\n            once\n        };\n        this.#handlers.push(wrap);\n        return wrap.id;\n    }\n    /**\n     * Remove a handler by its id.\n     * @param id\n     * @returns _True_ if handler was removed, _false_ if not found.\n     */\n    remove(id) {\n        const length = this.#handlers.length;\n        this.#handlers = this.#handlers.filter(handler => handler.id !== id);\n        return this.#handlers.length !== length;\n    }\n    /**\n     * Emit a value to all handlers\n     * @param value\n     */\n    notify(value) {\n        for (const handler of this.#handlers) {\n            handler.handler(value);\n            if (handler.once) {\n                this.remove(handler.id);\n            }\n        }\n    }\n    /**\n     * Remove all handlers\n     */\n    clear() {\n        this.#handlers = [];\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAeA,IAAa,eAAb,MAA0B;CACtB;CACA,WAAW;CACX,MAAM,KAAK,MAAM,KAAK,QAAQ,GAAG,IAAI;CACrC,cAAc;EACV,KAAKA,YAAY,CAAE;CACtB;;;;;CAKD,UAAU;AACN,SAAO,KAAKA,UAAU,WAAW;CACpC;;;;;;;;;;;CAWD,IAAI,SAAS,UAAU,CAAE,GAAE;EACvB,KAAKC;EACL,MAAM,OAAO,QAAQ,QAAQ;EAC7B,MAAM,OAAO;GACT,IAAI,GAAG,KAAKC,IAAI,GAAG,EAAE,KAAKD,UAAU;GACpC;GACA;EACH;EACD,KAAKD,UAAU,KAAK,KAAK;AACzB,SAAO,KAAK;CACf;;;;;;CAMD,OAAO,IAAI;EACP,MAAM,SAAS,KAAKA,UAAU;EAC9B,KAAKA,YAAY,KAAKA,UAAU,OAAO,aAAW,QAAQ,OAAO,GAAG;AACpE,SAAO,KAAKA,UAAU,WAAW;CACpC;;;;;CAKD,OAAO,OAAO;AACV,OAAK,MAAM,WAAW,KAAKA,WAAW;GAClC,QAAQ,QAAQ,MAAM;AACtB,OAAI,QAAQ,MACR,KAAK,OAAO,QAAQ,GAAG;EAE9B;CACJ;;;;CAID,QAAQ;EACJ,KAAKA,YAAY,CAAE;CACtB;AACJ"}