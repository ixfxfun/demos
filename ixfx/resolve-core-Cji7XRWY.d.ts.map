{"version":3,"file":"resolve-core-Cji7XRWY.d.ts","names":["ReactiveNonInitial","V","Reactive","ReactiveInitial","Unsubscriber","SignalKinds","Passed","BasicType","ReactiveNonInitial","ResolveToValueSync","V","Generator","IterableIterator","ResolveToValueAsync","AsyncGenerator","AsyncIterableIterator","Promise","ResolveToValue","resolve","resolveSync","resolveWithFallback","T","ResolveFallbackOpts","resolveWithFallbackSync"],"sources":["../../core/dist/src/types-reactive.d.ts","../../core/dist/src/resolve-core.d.ts"],"sourcesContent":["/**\n * A reactive that does not have an initial value\n */\nexport type ReactiveNonInitial<V> = Reactive<V> & {\n    last(): V | undefined;\n};\n/**\n * A reactive with an initial value\n */\nexport type ReactiveInitial<V> = Reactive<V> & {\n    last(): V;\n};\n/**\n * Unsubscribes from a reactive\n */\nexport type Unsubscriber = () => void;\n/**\n * Signals\n */\nexport type SignalKinds = `done` | `warn`;\n/**\n * A message\n */\nexport type Passed<V> = {\n    value: V | undefined;\n    signal?: SignalKinds;\n    context?: string;\n};\n/**\n * A Reactive\n */\nexport type Reactive<V> = {\n    /**\n     * Subscribes to a reactive. Receives\n     * data as well as signals. Use `onValue` if you\n     * just care about values.\n     *\n     * Return result unsubscribes.\n     *\n     * ```js\n     * const unsub = someReactive.on(msg => {\n     *    // Do something with msg.value\n     * });\n     *\n     * unsub(); // Unsubscribe\n     * ```\n     * @param handler\n     */\n    on(handler: (value: Passed<V>) => void): Unsubscriber;\n    /**\n     * Subscribes to a reactive's values.\n     * Returns a function that unsubscribes.\n     * @param handler\n     */\n    onValue(handler: (value: V) => void): Unsubscriber;\n    /**\n     * Disposes the reactive, providing a reason for debug tracing\n     * @param reason\n     */\n    dispose(reason: string): void;\n    /**\n     * Returns _true_ if Reactive is disposed\n     */\n    isDisposed(): boolean;\n    /**\n     * Optional 'set' to write a value.\n     * @param value\n     */\n    set?(value: V): void;\n};\n//# sourceMappingURL=types-reactive.d.ts.map","import type { BasicType } from \"@ixfx/core\";\nimport type { ReactiveNonInitial } from \"./types-reactive.js\";\n/**\n * Something that can resolve to a value\n */\nexport type ResolveToValueSync<V> = BasicType | ReactiveNonInitial<V> | Generator<V> | IterableIterator<V> | ((args: any) => V);\nexport type ResolveToValueAsync<V> = AsyncGenerator<V> | AsyncIterableIterator<V> | Promise<V> | ((args: any) => Promise<V>);\nexport type ResolveToValue<V> = ResolveToValueAsync<V> | ResolveToValueSync<V>;\n/**\n * Resolves `r` to a value, where `r` is:\n * * primitive value\n * * a/sync function\n * * a/sync generator/iterator\n * * ReactiveNonInitial\n * ```js\n * await resolve(10);       // 10\n * await resolve(() => 10); // 10\n * await resole(async () => {\n *  sleep(100);\n *  return 10;\n * });                // 10\n * ```\n *\n * To resolve an object's properties, use {@link resolveFields}.\n *\n * Resolve is not recursive. So if `r` is an object, it will be returned, even\n * though its properties may be resolvable.\n * @param r\n * @param args\n * @returns\n */\nexport declare function resolve<V extends BasicType>(r: ResolveToValue<V>, ...args: any): Promise<V>;\n/**\n * For a given input `r`, attempts to 'resolve' it. See {@link resolve} for details.\n * @param r\n * @param args\n * @returns\n */\nexport declare function resolveSync<V extends BasicType>(r: ResolveToValueSync<V>, ...args: any): V;\n/**\n * Resolves a value as per {@link resolve}, however\n * If an error is thrown or the resolution results in _undefined_\n * or NaN, `fallbackValue` is returned instead.\n *\n * `null` is an allowed return value.\n *\n * ```js\n * // Function returns undefined 50% of the time or 0\n * const fn = () => {\n *  if (Math.random() >= 0.5) return; // undefined\n *  return 0;\n * }\n * const r = resolveWithFallback(fn, 1);\n * const value = r(); // Always 0 or 1\n * ```\n * @param p Thing to resolve\n * @param fallback Fallback value if an error happens, undefined or NaN\n * @param args\n * @returns\n */\nexport declare function resolveWithFallback<T extends BasicType>(p: ResolveToValue<T>, fallback: ResolveFallbackOpts<T>, ...args: any): Promise<T>;\nexport declare function resolveWithFallbackSync<T extends BasicType>(p: ResolveToValueSync<T>, fallback: ResolveFallbackOpts<T>, ...args: any): T;\nexport type ResolveFallbackOpts<T> = {\n    value: T;\n    overrideWithLast?: boolean;\n};\n//# sourceMappingURL=resolve-core.d.ts.map"],"mappings":"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"}