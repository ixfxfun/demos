{"version":3,"file":"is-integer-BwgNgMII.js","names":[],"sources":["../packages/core/dist/src/is-integer.js"],"sourcesContent":["/**\n * Returns _true_ if `value` is an integer. Parses string input, but\n * all other data types return _false_.\n *\n * ```js\n * isInteger(1);      // true\n * isInteger(1.1);    // false\n * isInteger(`1`);    // true\n * isInteger(`1.1`);  // false\n * isInteger(true);   // false\n * isInteger(false);  // false\n * ```\n *\n * Returns _false_ for _undefined_, NaN, booleans and infinite numbers.\n * @param value\n * @returns\n */\nexport const isInteger = (value) => {\n    if (value === undefined)\n        return false;\n    if (typeof value === `string`) {\n        const v = Number.parseInt(value);\n        if (Number.isNaN(v))\n            return false;\n        if (v.toString() === value.toString())\n            return true;\n        return false;\n    }\n    if (typeof value === `number`) {\n        if (Number.isNaN(value))\n            return false;\n        if (!Number.isFinite(value))\n            return false;\n        if (Math.round(value) === value)\n            return true;\n        return false;\n    }\n    return false;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAiBA,MAAa,YAAY,CAAC,UAAU;AAChC,KAAI,UAAU,OACV,QAAO;AACX,KAAI,OAAO,UAAU,CAAC,MAAM,CAAC,EAAE;EAC3B,MAAM,IAAI,OAAO,SAAS,MAAM;AAChC,MAAI,OAAO,MAAM,EAAE,CACf,QAAO;AACX,MAAI,EAAE,UAAU,KAAK,MAAM,UAAU,CACjC,QAAO;AACX,SAAO;CACV;AACD,KAAI,OAAO,UAAU,CAAC,MAAM,CAAC,EAAE;AAC3B,MAAI,OAAO,MAAM,MAAM,CACnB,QAAO;AACX,MAAI,CAAC,OAAO,SAAS,MAAM,CACvB,QAAO;AACX,MAAI,KAAK,MAAM,MAAM,KAAK,MACtB,QAAO;AACX,SAAO;CACV;AACD,QAAO;AACV"}