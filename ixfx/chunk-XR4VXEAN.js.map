{"version":3,"sources":["../src/util/Results.ts","../src/data/arrays/GuardArray.ts"],"sourcesContent":["export type Result<T> = {\n  success: boolean\n  value?: T\n  error?: Error | string\n}\n\nexport type ResultOk<T> = {\n  success: true\n  value: T\n}\n\nexport type ResultError = {\n  success: false\n  error: Error | string\n}\n\n/**\n * If `result` is an error, throws it, otherwise ignored.\n * @param result \n * @returns \n */\nexport function throwResult<T>(result: Result<T>): result is ResultOk<T> {\n  if (result.success) return true;\n  if (typeof result.error === `string`) throw new Error(result.error);\n  throw result.error;\n}","/**\n * Throws an error if `array` parameter is not a valid array\n *\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/data.js';\n * Arrays.guardArray(someVariable);\n * ```\n * @private\n * @param array\n * @param name\n */\nexport const guardArray = <V>(array: ArrayLike<V>, name = `?`) => {\n  if (array === undefined) {\n    throw new TypeError(`Param '${ name }' is undefined. Expected array.`);\n  }\n  if (array === null) {\n    throw new TypeError(`Param '${ name }' is null. Expected array.`);\n  }\n  if (!Array.isArray(array)) {\n    throw new TypeError(`Param '${ name }' not an array as expected`);\n  }\n};\n"],"mappings":";AAqBO,SAAS,YAAe,QAA0C;AACvE,MAAI,OAAO,QAAS,QAAO;AAC3B,MAAI,OAAO,OAAO,UAAU,SAAU,OAAM,IAAI,MAAM,OAAO,KAAK;AAClE,QAAM,OAAO;AACf;;;ACdO,IAAM,aAAa,CAAI,OAAqB,OAAO,QAAQ;AAChE,MAAI,UAAU,QAAW;AACvB,UAAM,IAAI,UAAU,UAAW,IAAK,iCAAiC;AAAA,EACvE;AACA,MAAI,UAAU,MAAM;AAClB,UAAM,IAAI,UAAU,UAAW,IAAK,4BAA4B;AAAA,EAClE;AACA,MAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,UAAM,IAAI,UAAU,UAAW,IAAK,4BAA4B;AAAA,EAClE;AACF;","names":[]}