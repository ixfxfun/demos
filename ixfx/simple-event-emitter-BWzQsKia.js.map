{"version":3,"file":"simple-event-emitter-BWzQsKia.js","names":["#store","#disposed","#listeners"],"sources":["../../events/dist/src/map-of.js","../../events/dist/src/simple-event-emitter.js"],"sourcesContent":["export class MapOfSimple {\n    #store = new Map();\n    /**\n     * Gets a copy of the underlying array storing values at `key`, or an empty array if\n     * key does not exist\n     * @param key\n     * @returns\n     */\n    get(key) {\n        const arr = this.#store.get(key);\n        if (!arr)\n            return [];\n        return [...arr];\n    }\n    /**\n     * Returns the number of values stored under `key`\n     * @param key\n     * @returns\n     */\n    size(key) {\n        const arr = this.#store.get(key);\n        if (!arr)\n            return 0;\n        return arr.length;\n    }\n    /**\n     * Iterate over all values contained under `key`\n     * @param key\n     * @returns\n     */\n    *iterateKey(key) {\n        const arr = this.#store.get(key);\n        if (!arr)\n            return;\n        yield* arr.values();\n    }\n    /**\n     * Iterate all values, regardless of key\n     */\n    *iterateValues() {\n        for (const key of this.#store.keys()) {\n            yield* this.iterateKey(key);\n        }\n    }\n    /**\n     * Iterate all keys\n     */\n    *iterateKeys() {\n        yield* this.#store.keys();\n    }\n    addKeyedValues(key, ...values) {\n        let arr = this.#store.get(key);\n        if (!arr) {\n            arr = [];\n            this.#store.set(key, arr);\n        }\n        arr.push(...values);\n    }\n    deleteKeyValue(key, value) {\n        const arr = this.#store.get(key);\n        if (!arr)\n            return false;\n        const arrCopy = arr.filter(v => v !== value);\n        if (arrCopy.length === arr.length)\n            return false;\n        this.#store.set(key, arrCopy);\n        return true;\n    }\n    clear() {\n        this.#store.clear();\n    }\n}\n","import { MapOfSimple } from \"./map-of.js\";\nexport class SimpleEventEmitter {\n    #listeners = new MapOfSimple();\n    #disposed = false;\n    dispose() {\n        if (this.#disposed)\n            return;\n        this.clearEventListeners();\n    }\n    get isDisposed() {\n        return this.#disposed;\n    }\n    /**\n     * Fire event\n     * @param type Type of event\n     * @param args Arguments for event\n     * @returns\n     */\n    fireEvent(type, args) {\n        if (this.#disposed)\n            throw new Error(`Disposed`);\n        //console.log(`Firing ${ type as string }. Listeners: ${ this.#listeners.size(type as string) }`);\n        for (const l of this.#listeners.iterateKey(type)) {\n            l(args, this);\n        }\n    }\n    /**\n     * Adds event listener.\n     *\n     * @throws Error if emitter is disposed\n     * @typeParam K - Events\n     * @param name Event name\n     * @param listener Event handler\n     */\n    addEventListener(name, listener) {\n        if (this.#disposed)\n            throw new Error(`Disposed`);\n        this.#listeners.addKeyedValues(name, listener);\n    }\n    /**\n     * Remove event listener\n     *\n     * @param listener\n     */\n    removeEventListener(type, listener) {\n        if (this.#disposed)\n            return;\n        // listener: Listener<Events>): void {\n        this.#listeners.deleteKeyValue(type, listener);\n    }\n    /**\n     * Clear all event listeners\n     * @private\n     */\n    clearEventListeners() {\n        if (this.#disposed)\n            return;\n        this.#listeners.clear();\n    }\n}\n"],"mappings":";AAAA,IAAa,cAAb,MAAyB;CACrB,yBAAS,IAAI;;;;;;;CAOb,IAAI,KAAK;EACL,MAAM,MAAM,KAAKA,OAAO,IAAI,IAAI;AAChC,MAAI,CAAC,IACD,QAAO,CAAE;AACb,SAAO,CAAC,GAAG,GAAI;CAClB;;;;;;CAMD,KAAK,KAAK;EACN,MAAM,MAAM,KAAKA,OAAO,IAAI,IAAI;AAChC,MAAI,CAAC,IACD,QAAO;AACX,SAAO,IAAI;CACd;;;;;;CAMD,CAAC,WAAW,KAAK;EACb,MAAM,MAAM,KAAKA,OAAO,IAAI,IAAI;AAChC,MAAI,CAAC,IACD;EACJ,OAAO,IAAI,QAAQ;CACtB;;;;CAID,CAAC,gBAAgB;AACb,OAAK,MAAM,OAAO,KAAKA,OAAO,MAAM,EAChC,OAAO,KAAK,WAAW,IAAI;CAElC;;;;CAID,CAAC,cAAc;EACX,OAAO,KAAKA,OAAO,MAAM;CAC5B;CACD,eAAe,KAAK,GAAG,QAAQ;EAC3B,IAAI,MAAM,KAAKA,OAAO,IAAI,IAAI;AAC9B,MAAI,CAAC,KAAK;GACN,MAAM,CAAE;GACR,KAAKA,OAAO,IAAI,KAAK,IAAI;EAC5B;EACD,IAAI,KAAK,GAAG,OAAO;CACtB;CACD,eAAe,KAAK,OAAO;EACvB,MAAM,MAAM,KAAKA,OAAO,IAAI,IAAI;AAChC,MAAI,CAAC,IACD,QAAO;EACX,MAAM,UAAU,IAAI,OAAO,OAAK,MAAM,MAAM;AAC5C,MAAI,QAAQ,WAAW,IAAI,OACvB,QAAO;EACX,KAAKA,OAAO,IAAI,KAAK,QAAQ;AAC7B,SAAO;CACV;CACD,QAAQ;EACJ,KAAKA,OAAO,OAAO;CACtB;AACJ;;;;ACtED,IAAa,qBAAb,MAAgC;CAC5B,aAAa,IAAI;CACjB,YAAY;CACZ,UAAU;AACN,MAAI,KAAKC,UACL;EACJ,KAAK,qBAAqB;CAC7B;CACD,IAAI,aAAa;AACb,SAAO,KAAKA;CACf;;;;;;;CAOD,UAAU,MAAM,MAAM;AAClB,MAAI,KAAKA,UACL,OAAM,IAAI,MAAM,CAAC,QAAQ,CAAC;AAE9B,OAAK,MAAM,KAAK,KAAKC,WAAW,WAAW,KAAK,EAC5C,EAAE,MAAM,KAAK;CAEpB;;;;;;;;;CASD,iBAAiB,MAAM,UAAU;AAC7B,MAAI,KAAKD,UACL,OAAM,IAAI,MAAM,CAAC,QAAQ,CAAC;EAC9B,KAAKC,WAAW,eAAe,MAAM,SAAS;CACjD;;;;;;CAMD,oBAAoB,MAAM,UAAU;AAChC,MAAI,KAAKD,UACL;EAEJ,KAAKC,WAAW,eAAe,MAAM,SAAS;CACjD;;;;;CAKD,sBAAsB;AAClB,MAAI,KAAKD,UACL;EACJ,KAAKC,WAAW,OAAO;CAC1B;AACJ"}