{"version":3,"file":"results-DiT62oOj.js","names":["result: Result<T>","result: ResultError"],"sources":["../../packages/core/src/results.ts"],"sourcesContent":["import { getErrorMessage } from \"@ixfx/debug\"\n\nexport type ResultOk<T> = {\n  success: true\n  value: T\n}\n\nexport type ResultError = {\n  success: false\n  error: Error | string\n}\n\nexport type Result<T> = ResultOk<T> | ResultError;\n/**\n * If `result` is an error, throws it, otherwise ignored.\n * @param result \n * @returns \n */\nexport function throwResult<T>(result: Result<T>): result is ResultOk<T> {\n  if (result.success) return true;\n  if (typeof result.error === `string`) throw new Error(result.error);\n  throw result.error;\n}\n\nexport function resultToError(result: ResultError): Error {\n  if (typeof result.error === `string`) return new Error(result.error);\n  else return result.error\n}\n\nexport function resultToValue<T>(result: Result<T>): T {\n  if (result.success) return result.value;\n  else throw resultToError(result);\n}\n\nexport function resultErrorToString(result: ResultError): string {\n  if (typeof result.error === `string`) return result.error;\n  else return getErrorMessage(result.error);\n}"],"mappings":";;;;;;AAkBA,SAAgB,YAAeA,QAA0C;AACvE,KAAI,OAAO,QAAS,QAAO;AAC3B,YAAW,OAAO,WAAW,QAAS,OAAM,IAAI,MAAM,OAAO;AAC7D,OAAM,OAAO;AACd;AAED,SAAgB,cAAcC,QAA4B;AACxD,YAAW,OAAO,WAAW,QAAS,QAAO,IAAI,MAAM,OAAO;KACzD,QAAO,OAAO;AACpB"}