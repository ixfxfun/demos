{"version":3,"file":"src-Cst-Mrgn.js","names":["el","JSON5","resolveElement","data","PointsPlaceholder","RectsPlaceholderPositioned","RectsIsPlaceholder","PointsEmpty","PointsIsPlaceholder","el","query","el","el","#el","#containerEl","#stretch","#onSetSize","#size","#naturalRatio","#naturalSize","#viewport","#byViewport","#byContainer","#disposed","#resizeObservable","el","#onParentResize","#computeSizeBasedOnParent","#onViewportResize","el","log","timestamp","clear","el","select","el","JSON5"],"sources":["../packages/dom/dist/src/resolve-el.js","../packages/dom/dist/src/data-table.js","../packages/dom/dist/src/drag-drop.js","../packages/dom/dist/src/forms.js","../packages/dom/dist/src/ts-util.js","../packages/dom/dist/src/css-variables.js","../packages/dom/dist/src/css.js","../packages/dom/dist/src/data-display.js","../packages/dom/dist/src/set-property.js","../packages/dom/dist/src/el.js","../packages/dom/dist/src/element-sizing.js","../packages/dom/dist/src/error-handler.js","../packages/dom/dist/src/shadow-dom.js","../packages/dom/dist/src/log.js","../packages/dom/dist/src/inline-console.js","../packages/dom/dist/src/query.js","../packages/dom/dist/src/tabbed-panel.js","../packages/dom/dist/src/utility.js","../packages/dom/dist/src/index.js"],"sourcesContent":["import { resultToError } from \"@ixfx/guards\";\n/**\n * Resolves either a string or HTML element to an element.\n * Useful when an argument is either an HTML element or query.\n *\n * ```js\n * resolveEl(`#someId`);\n * resolveEl(someElement);\n * ```\n * @param domQueryOrEl\n * @returns\n */\nexport const resolveEl = (domQueryOrEl) => {\n    const r = resolveElementTry(domQueryOrEl);\n    if (r.success)\n        return r.value;\n    throw resultToError(r);\n};\n/**\n * Tries to resolve a query, returning a `Result`.\n *\n * ```js\n * const { success, value, error } = resolveElementTry(`#some-element`);\n * if (success) {\n *  // Do something with value\n * } else {\n *  console.error(error);\n * }\n * ```\n * @param domQueryOrEl\n * @returns\n */\nexport const resolveElementTry = (domQueryOrEl) => {\n    if (typeof domQueryOrEl === `string`) {\n        const d = document.querySelector(domQueryOrEl);\n        if (d === null) {\n            const error = domQueryOrEl.startsWith(`#`) ? `Query '${domQueryOrEl}' did not match anything. Try '#id', 'div', or '.class'`\n                : `Query '${domQueryOrEl}' did not match anything. Did you mean '#${domQueryOrEl}?`;\n            return { success: false, error };\n        }\n        domQueryOrEl = d;\n    }\n    else if (domQueryOrEl === null) {\n        return { success: false, error: `Param 'domQueryOrEl' is null` };\n    }\n    else if (domQueryOrEl === undefined) {\n        return { success: false, error: `Param 'domQueryOrEl' is undefined` };\n    }\n    const el = domQueryOrEl;\n    return { success: true, value: el };\n};\n/**\n * Returns a set of elements.\n *\n * Returns an empty list if `selectors` is undefined or null.\n *\n * @param selectors\n * @returns\n */\nexport const resolveEls = (selectors) => {\n    if (selectors === undefined)\n        return [];\n    if (selectors === null)\n        return [];\n    if (Array.isArray(selectors))\n        return selectors;\n    if (typeof selectors === `string`) {\n        const elements = [...document.querySelectorAll(selectors)];\n        return elements;\n    }\n    return [selectors];\n};\n","import { round } from '@ixfx/numbers';\nimport { resolveEl as resolveElement } from './resolve-el.js';\nimport JSON5 from 'json5';\nconst padding = (v, options) => {\n    if (options.leftPadding) {\n        if (v.length < options.leftPadding)\n            return '&nbsp;'.repeat(options.leftPadding - v.length) + v;\n    }\n    return v;\n};\nconst convertNumber = (v, o) => {\n    v = (o.roundNumbers !== undefined) ? round(o.roundNumbers, v) : v;\n    let asString = (o.precision !== undefined) ? v.toFixed(o.precision) : v.toString();\n    asString = padding(asString.toString(), o);\n    return asString;\n};\nconst toHtmlSimple = (v, options) => {\n    if (v === null)\n        return `(null)`;\n    if (v === undefined)\n        return `(undefined)`;\n    if (typeof v === `boolean`)\n        return v ? `true` : `false`;\n    if (typeof v === `string`)\n        return `\"${v}\"`;\n    if (typeof v === `number`)\n        return convertNumber(v, options.numbers);\n    if (typeof v === `object`)\n        return toTableSimple(v, options);\n    return JSON5.stringify(v);\n};\nconst toTableSimple = (v, options) => {\n    let html = `<div style=\"display:grid; grid-template-columns: repeat(2, 1fr)\">`;\n    for (const entry of Object.entries(v)) {\n        const value = toHtmlSimple(entry[1], options);\n        html += `<div class=\"label\" style=\"display:table-cell\">${entry[0]}</div>\n      <div class=\"data\" style=\"display:table-cell\">${value}</div>`;\n    }\n    html += `</div>`;\n    return html;\n};\n/**\n * Creates a table of data points for each object in the map\n * ```\n * const t = DataTable.fromList(parentEl, map);\n * t.update(newMap);\n * ```\n */\nexport const fromList = (parentOrQuery, data) => {\n    const parent = resolveElement(parentOrQuery);\n    let container = document.createElement(`DIV`);\n    parent.append(container);\n    const options = {\n        numbers: {},\n        objectsAsTables: true\n    };\n    const remove = () => {\n        if (!container)\n            return false;\n        container.remove();\n        container = undefined;\n        return true;\n    };\n    const update = (data) => {\n        const seenTables = new Set();\n        for (const [key, value] of data) {\n            const tKey = `table-${key}`;\n            seenTables.add(tKey);\n            let t = parent.querySelector(`#${tKey}`);\n            if (t === null) {\n                t = document.createElement(`table`);\n                if (!t)\n                    throw new Error(`Could not create table element`);\n                t.id = tKey;\n                parent.append(t);\n            }\n            updateElement(t, value, options);\n        }\n        // Remove tables that aren't present in map\n        const tables = Array.from(parent.querySelectorAll(`table`));\n        for (const t of tables) {\n            if (!seenTables.has(t.id)) {\n                t.remove();\n            }\n        }\n    };\n    if (data)\n        update(data);\n    return { update, remove };\n    // return (d: ReadonlyMap<string, object>) => {\n    //   update(d);\n    // };\n};\n/**\n * Updates the given table element so each entry in the map is a\n * row in the table.\n *\n * Rows are keyed by the map key. Rows with keys not found in the map are deleted.\n * @param t Table\n * @param data Map of data\n * @param options Options\n * @returns\n */\nconst updateElement = (t, data, options) => {\n    const numberFormatting = options.numbers ?? {};\n    //const precision = options.precision ?? 2;\n    const idPrefix = options.idPrefix ?? ``;\n    const objectsAsTables = options.objectsAsTables ?? false;\n    if (data === undefined) {\n        t.innerHTML = ``;\n        return;\n    }\n    const seenRows = new Set();\n    for (const [key, value] of Object.entries(data)) {\n        const domKey = `${idPrefix}-row-${key}`;\n        // Keep track of keys currently in object\n        seenRows.add(domKey);\n        // Is there already a row for this key?\n        let rowEl = t.querySelector(`tr[data-key='${domKey}']`);\n        if (rowEl === null) {\n            // No row, add it\n            rowEl = document.createElement(`tr`);\n            t.append(rowEl);\n            rowEl.setAttribute(`data-key`, domKey);\n            const keyEl = document.createElement(`td`);\n            keyEl.textContent = key;\n            keyEl.classList.add(`label`);\n            rowEl.append(keyEl);\n        }\n        // Is there already a cell for the value?\n        let valEl = rowEl.querySelector(`td[data-key='${domKey}-val']`);\n        if (valEl === null) {\n            // No, create the cell\n            valEl = document.createElement(`td`);\n            valEl.classList.add(`data`);\n            valEl.setAttribute(`data-key`, `${domKey}-val`);\n            rowEl.append(valEl);\n        }\n        // Format the value as HTML\n        let valueHTML;\n        if (options.formatter) {\n            valueHTML = options.formatter(value, key);\n        }\n        // If there's no formatter, or not handled...\n        if (valueHTML === undefined) {\n            if (typeof value === `object`) {\n                valueHTML = objectsAsTables ? toTableSimple(value, options) : JSON5.stringify(value);\n            }\n            else if (typeof value === `number`) {\n                valueHTML = convertNumber(value, numberFormatting);\n                //let vv = (options.roundNumbers) ? round(options.roundNumbers, value) : value;\n                //let vvStr = vv.toFixed(precision);\n                //valueHTML = padding(vvStr, options);\n            }\n            else if (typeof value === `boolean`) {\n                valueHTML = value ? `true` : `false`;\n            }\n            else if (typeof value === `string`) {\n                valueHTML = `\"${value}\"`;\n            }\n            else {\n                valueHTML = JSON.stringify(value);\n            }\n        }\n        // Set the cell value\n        valEl.innerHTML = valueHTML;\n    }\n    // Remove rows that aren't present in data\n    const rows = Array.from(t.querySelectorAll(`tr`));\n    for (const r of rows) {\n        const key = r.getAttribute(`data-key`);\n        if (!seenRows.has(key)) {\n            r.remove();\n        }\n    }\n};\n/**\n * Creates a HTML table where each row is a key-value pair from `data`.\n * First column is the key, second column data.\n *\n * ```js\n * const dt = fromObject(`#hostDiv`);\n * ```\n *\n * `dt` is a function to call when you want to update data:\n *\n * ```js\n * dt({\n *  name: `Blerg`,\n *  height: 120\n * });\n * ```\n */\nexport const fromObject = (parentOrQuery, data, opts = {}) => {\n    const parent = resolveElement(parentOrQuery);\n    const idPrefix = opts.idPrefix ?? Math.floor(Math.random() * 1000).toString();\n    const options = {\n        numbers: {},\n        objectsAsTables: true,\n        idPrefix: ``,\n        ...opts\n    };\n    let t = document.createElement(`table`);\n    parent.append(t);\n    const remove = () => {\n        if (!t)\n            return false;\n        t.remove();\n        t = undefined;\n        return true;\n    };\n    // Update already if there's initial data\n    if (data)\n        updateElement(t, data, options);\n    const update = (d) => {\n        if (!t)\n            throw new Error(`Table disposed`);\n        updateElement(t, d, { ...options, idPrefix });\n    };\n    return { remove, update };\n};\n","import { resolveEl } from './resolve-el.js';\nimport { isPlaceholder as RectsIsPlaceholder } from '@ixfx/geometry/rect';\nimport { Placeholder as PointsPlaceholder, isPlaceholder as PointsIsPlaceholder, Empty as PointsEmpty } from '@ixfx/geometry/point';\nimport { PlaceholderPositioned as RectsPlaceholderPositioned } from '@ixfx/geometry/rect';\nimport { clamp } from '@ixfx/numbers';\nexport const draggable = (elemOrQuery, listener, options = {}) => {\n    const elem = resolveEl(elemOrQuery);\n    /**\n     * Viewport location at drag start\n     */\n    let initialPointerPosition = PointsPlaceholder;\n    let token;\n    const autoTranslate = options.autoTranslate ?? false;\n    const quickDrag = options.quickDrag ?? false;\n    const fence = options.fence ? resolveEl(options.fence) : undefined;\n    const fenceViewport = options.fenceViewport;\n    let fenceOffset = RectsPlaceholderPositioned;\n    const relativePosition = window.getComputedStyle(elem).position === `relative`;\n    // De-select if there's a click elsewhere\n    const onParentClick = () => {\n        const selected = elem.classList.contains(`drag-sel`);\n        if (selected) {\n            elem.classList.remove(`drag-sel`);\n        }\n    };\n    // Click to select\n    const onElementClick = (event) => {\n        const selected = elem.classList.contains(`drag-sel`);\n        if (selected) {\n            elem.classList.remove(`drag-sel`);\n        }\n        else {\n            elem.classList.add(`drag-sel`);\n        }\n        event.stopPropagation();\n    };\n    elem.ownerDocument.addEventListener(`click`, onParentClick);\n    elem.addEventListener(`click`, onElementClick);\n    // Remove event handlers\n    const dragCleanup = () => {\n        elem.classList.remove(`drag-progress`);\n        elem.ownerDocument.removeEventListener(`pointermove`, onPointerMove);\n        elem.ownerDocument.removeEventListener(`pointerup`, onPointerUp);\n        elem.ownerDocument.removeEventListener(`pointercancel`, onDragCancel);\n    };\n    const dispose = () => {\n        if (elem.classList.contains(`drag-progress`)) {\n            onDragCancel(undefined, `dispose`);\n        }\n        else {\n            dragCleanup();\n        }\n        elem.ownerDocument.removeEventListener(`click`, onParentClick);\n        elem.removeEventListener(`click`, onElementClick);\n    };\n    const validateOffsetAndPoint = (offset, x, y) => {\n        if (!RectsIsPlaceholder(fenceOffset)) {\n            offset = {\n                x: clamp(offset.x, fenceOffset.x, fenceOffset.width),\n                y: clamp(offset.y, fenceOffset.y, fenceOffset.height)\n            };\n            if (fenceViewport) {\n                x = clamp(x, fenceViewport.x, fenceViewport.x + fenceViewport.width);\n                y = clamp(y, fenceViewport.y, fenceViewport.y + fenceViewport.height);\n            }\n        }\n        return [offset, { x, y }];\n    };\n    // Dragging\n    let lastMoveOffset = PointsEmpty;\n    const onPointerMove = (moveEvent) => {\n        moveEvent.preventDefault();\n        moveEvent.stopPropagation();\n        const { x, y } = moveEvent;\n        let offset = PointsIsPlaceholder(initialPointerPosition)\n            ? { x: moveEvent.offsetX, y: moveEvent.offsetY }\n            : {\n                x: x - initialPointerPosition.x,\n                y: y - initialPointerPosition.y,\n            };\n        const r = validateOffsetAndPoint(offset, x, y);\n        offset = r[0];\n        const state = {\n            delta: offset,\n            initial: initialPointerPosition,\n            token,\n            viewport: r[1]\n        };\n        if (typeof listener.progress !== `undefined`) {\n            const p = listener.progress(state);\n            if (p.abort) {\n                onDragCancel(undefined, `discontinued`);\n                return;\n            }\n            if (p.viewport) {\n                offset = {\n                    x: p.viewport.x - initialPointerPosition.x,\n                    y: p.viewport.y - initialPointerPosition.y\n                };\n            }\n        }\n        lastMoveOffset = offset;\n        if (autoTranslate) {\n            const offsetX = offset.x;\n            const offsetY = offset.y;\n            elem.style.translate = `${offsetX}px ${offsetY}px`;\n        }\n    };\n    // Done dragging\n    const onPointerUp = (upEvent) => {\n        const bounds = elem.getBoundingClientRect();\n        dragCleanup();\n        const { x, y } = upEvent;\n        // let offset = {\n        //   x: upEvent.x - initialPointerPosition.x,\n        //   y: upEvent.y - initialPointerPosition.y,\n        // };\n        const r = validateOffsetAndPoint(lastMoveOffset, x, y);\n        const state = {\n            initial: initialPointerPosition,\n            token,\n            delta: r[0],\n            viewport: r[1]\n        };\n        if (autoTranslate) {\n            elem.style.translate = `none`;\n            if (relativePosition) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-non-null-asserted-optional-chain\n                const parent = elem.parentElement?.getBoundingClientRect();\n                elem.style.left = `${bounds.x - parent.left}px`;\n                elem.style.top = `${bounds.y - parent.top}px`;\n            }\n            else {\n                elem.style.left = `${bounds.x}px`;\n                elem.style.top = `${bounds.y}px`;\n            }\n        }\n        if (typeof listener.success !== `undefined`) {\n            listener.success(state);\n        }\n    };\n    // Drag is cancelled\n    const onDragCancel = (event, reason = `pointercancel`) => {\n        dragCleanup();\n        let viewport = PointsPlaceholder;\n        if (event && `x` in event && `y` in event) {\n            viewport = { x: event.x, y: event.y };\n        }\n        const state = {\n            token,\n            initial: initialPointerPosition,\n            delta: { x: -1, y: -1 },\n            viewport\n        };\n        if (typeof listener.abort !== `undefined`) {\n            listener.abort(reason, state);\n        }\n    };\n    elem.addEventListener(`pointerdown`, (event) => {\n        const selected = elem.classList.contains(`drag-sel`);\n        if (!selected && !quickDrag)\n            return;\n        const event_ = event;\n        initialPointerPosition = { x: event_.x, y: event_.y };\n        const s = typeof listener.start === `undefined`\n            ? { allow: true, token }\n            : listener.start();\n        if (!s.allow)\n            return;\n        token = s.token;\n        if (fence) {\n            const fenceBounds = fence.getBoundingClientRect();\n            fenceOffset = {\n                x: fenceBounds.x - initialPointerPosition.x,\n                y: fenceBounds.y - initialPointerPosition.y,\n                width: fenceBounds.x + fenceBounds.width - initialPointerPosition.x,\n                height: fenceBounds.y + fenceBounds.height - initialPointerPosition.y,\n            };\n        }\n        else if (fenceViewport) {\n            fenceOffset = {\n                x: fenceViewport.x - initialPointerPosition.x,\n                y: fenceViewport.y - initialPointerPosition.y,\n                width: (fenceViewport.width + fenceViewport.x) - initialPointerPosition.x,\n                height: (fenceViewport.height + fenceViewport.y) - initialPointerPosition.y\n            };\n        }\n        elem.classList.add(`drag-progress`);\n        elem.ownerDocument.addEventListener(`pointermove`, onPointerMove);\n        elem.ownerDocument.addEventListener(`pointerup`, onPointerUp);\n        elem.ownerDocument.addEventListener(`pointercancel`, onDragCancel);\n    });\n    return dispose;\n};\n","import { resolveEl } from './resolve-el.js';\n/**\n * Adds tab and shift+tab to TEXTAREA\n * @param el\n */\nexport const textAreaKeyboard = (el) => {\n    el.addEventListener(`keydown`, (event) => {\n        const elementValue = el.value;\n        const start = el.selectionStart;\n        const end = el.selectionEnd;\n        if (event.key === `Tab` && event.shiftKey) {\n            if (el.value.substring(start - 2, start) === `  `) {\n                el.value = elementValue.slice(0, Math.max(0, start - 2)) + elementValue.slice(Math.max(0, end));\n            }\n            el.selectionStart = el.selectionEnd = start - 2;\n            event.preventDefault();\n            return false;\n        }\n        else if (event.key === `Tab`) {\n            el.value = elementValue.slice(0, Math.max(0, start)) + `  ` + elementValue.slice(Math.max(0, end));\n            el.selectionStart = el.selectionEnd = start + 2;\n            event.preventDefault();\n            return false;\n        }\n    });\n};\n/**\n * Quick access to <input type=\"checkbox\"> value.\n * Provide a checkbox by string id or object reference. If a callback is\n * supplied, it will be called when the checkbox changes value.\n *\n * ```\n * const opt = checkbox(`#chkMate`);\n * opt.checked; // Gets/sets\n *\n * const opt = checkbox(document.getElementById(`#chkMate`), newVal => {\n *  if (newVal) ...\n * });\n * ```\n * @param {(string | HTMLInputElement)} domIdOrEl\n * @param {(currentVal:boolean) => void} [onChanged]\n * @returns\n */\nexport const checkbox = (domIdOrEl, onChanged) => {\n    const el = resolveEl(domIdOrEl);\n    if (onChanged) {\n        el.addEventListener(`change`, () => {\n            onChanged(el.checked);\n        });\n    }\n    return {\n        get checked() {\n            return el.checked;\n        },\n        set checked(value) {\n            el.checked = value;\n        },\n    };\n};\n/**\n * Numeric INPUT\n *\n * ```\n * const el = numeric(`#num`, (currentValue) => {\n *  // Called when input changes\n * })\n * ```\n *\n * Get/set value\n * ```\n * el.value = 10;\n * ```\n * @param domIdOrEl\n * @param onChanged\n * @param live If true, event handler fires based on `input` event, rather than `change`\n * @returns\n */\nexport const numeric = (domIdOrEl, onChanged, live) => {\n    const el = resolveEl(domIdOrEl);\n    const eventName = live ? `change` : `input`;\n    if (onChanged) {\n        el.addEventListener(eventName, () => {\n            onChanged(Number.parseInt(el.value));\n        });\n    }\n    return {\n        get value() {\n            return Number.parseInt(el.value);\n        },\n        set value(value) {\n            el.value = value.toString();\n        },\n    };\n};\n/**\n * Button\n *\n * ```\n * const b = button(`#myButton`, () => {\n *  console.log(`Button clicked`);\n * });\n * ```\n *\n * ```\n * b.click(); // Call the click handler\n * b.disabled = true / false;\n * ```\n * @param domQueryOrEl Query string or element instance\n * @param onClickHandler Callback when button is clicked\n * @returns\n */\nexport const button = (domQueryOrEl, onClickHandler) => {\n    const el = resolveEl(domQueryOrEl);\n    const addEvent = () => {\n        if (onClickHandler) {\n            el.addEventListener(`click`, onClickHandler);\n        }\n    };\n    const removeEvent = () => {\n        if (onClickHandler) {\n            el.removeEventListener(`click`, onClickHandler);\n        }\n    };\n    addEvent();\n    return {\n        /**\n         * Gets text content of button\n         */\n        get title() {\n            return el.textContent;\n        },\n        /**\n         * Sets text content of button\n         */\n        set title(value) {\n            el.textContent = value;\n        },\n        /**\n         * Disposes the button.\n         * Removes event handler and optionally removes from document\n         * @param deleteElement\n         */\n        dispose(deleteElement = false) {\n            removeEvent();\n            if (deleteElement)\n                el.remove();\n        },\n        /**\n         * Sets the click handler, overwriting existing.\n         * @param handler\n         */\n        onClick(handler) {\n            removeEvent();\n            onClickHandler = handler;\n            addEvent();\n        },\n        /**\n         * Trigger onClick handler\n         */\n        click() {\n            if (onClickHandler)\n                onClickHandler();\n        },\n        /**\n         * Sets disabled state of button\n         */\n        set disabled(value) {\n            el.disabled = value;\n        },\n        /**\n         * Gets the button element\n         */\n        get el() {\n            return el;\n        }\n    };\n};\n/**\n * Creates a BUTTON element, wrapping it via {@link button} and returning it.\n * ```js\n * const b = buttonCreate(`Stop`, () => console.log(`Stop`));\n * someParent.addNode(b.el);\n * ```\n * @param title\n * @param onClick\n * @returns\n */\nexport const buttonCreate = (title, onClick) => {\n    const el = document.createElement(`button`);\n    const w = button(el, onClick);\n    w.title = title;\n    return w;\n};\n/**\n * SELECT element.\n *\n * Handle changes in value:\n * ```\n * const mySelect = select(`#mySelect`, (newValue) => {\n *  console.log(`Value is now ${newValue}`);\n * });\n * ```\n *\n * Enable/disable:\n * ```\n * mySelect.disabled = true / false;\n * ```\n *\n * Get currently selected index or value:\n * ```\n * mySelect.value / mySelect.index\n * ```\n *\n * Is the currently selected value a placeholder?\n * ```\n * mySelect.isSelectedPlaceholder\n * ```\n *\n * Set list of options\n * ```\n * // Adds options, preselecting `opt2`.\n * mySelect.setOpts([`opt1`, `opt2 ...], `opt2`);\n * ```\n *\n * Select an element\n * ```\n * mySelect.select(1); // Select second item\n * mySelect.select(1, true); // If true is added, change handler fires as well\n * ```\n * @param domQueryOrEl Query (eg `#id`) or element\n * @param onChanged Callback when a selection is made\n * @param options Options\n * @return\n */\nexport const select = (domQueryOrEl, onChanged, options = {}) => {\n    const el = resolveEl(domQueryOrEl);\n    const { placeholderOpt, shouldAddChoosePlaceholder = false, autoSelectAfterChoice = -1, } = options;\n    const change = () => {\n        if (onChanged !== undefined)\n            onChanged(el.value);\n        if (autoSelectAfterChoice >= 0)\n            el.selectedIndex = autoSelectAfterChoice;\n    };\n    if (onChanged) {\n        el.addEventListener(`change`, (_event) => {\n            change();\n        });\n    }\n    return {\n        set disabled(value) {\n            el.disabled = value;\n        },\n        get value() {\n            return el.value;\n        },\n        get index() {\n            return el.selectedIndex;\n        },\n        get isSelectedPlaceholder() {\n            return ((shouldAddChoosePlaceholder || options.placeholderOpt !== undefined) &&\n                el.selectedIndex === 0);\n        },\n        setOpts(opts, preSelect) {\n            el.options.length = 0;\n            if (shouldAddChoosePlaceholder)\n                opts = [`-- Choose --`, ...opts];\n            else if (placeholderOpt !== undefined)\n                opts = [placeholderOpt, ...opts];\n            let toSelect = 0;\n            for (const [index, o] of opts.entries()) {\n                const optEl = document.createElement(`option`);\n                optEl.value = o;\n                optEl.innerHTML = o;\n                if (preSelect !== undefined && o === preSelect)\n                    toSelect = index;\n                el.options.add(optEl);\n            }\n            el.selectedIndex = toSelect;\n        },\n        select(index = 0, trigger = false) {\n            el.selectedIndex = index;\n            if (trigger && onChanged) {\n                change();\n            }\n        },\n    };\n};\n","/* eslint-disable unicorn/prevent-abbreviations */\nexport function isHtmlElement(o) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return (typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\n        o && typeof o === \"object\" && o !== null && o.nodeType === 1 && typeof o.nodeName === \"string\");\n}\n","import * as Text from \"@ixfx/core/text\";\nimport { resolveEl } from \"./resolve-el.js\";\nimport { isHtmlElement } from \"./ts-util.js\";\n/**\n * Parses input in the form of: `['elementid-attribute', 'default-value']`.\n * Eg, `['indicator-fill', 'gray']` will yield:\n * ```\n * { variable: `indicator-fill`, attribute: `fill`, id: `indicator`, defaultValue: `gray` }\n * ```\n *\n * Once parsed, use {@link setFromCssVariables} to apply data.\n *\n * ```js\n * // Array of arrays is treated as a set of key-value pairs\n * const options = [ [`indicator-fill`, `gray`], [`backdrop-fill`, `whitesmoke`] ]\n * const attrs = parseCssVariablesAsAttributes(options);\n * Yields:\n * [\n *  { variable: `indicator-fill`, attribute: `fill`, id: `indicator`, defaultValue: `gray` }\n *  { variable: `backdrop-fill`, attribute: `fill`, id: `backdrop`, defaultValue: `whitesmoke` }\n * ]\n *\n * // Assign\n * setFromCssVariables(document.body, attrs);\n * ```\n * @param options\n * @returns\n */\nexport const parseCssVariablesAsAttributes = (options) => {\n    return options.map(opt => {\n        let defaultValue;\n        // Nested array, treat second element as default value, name as first\n        if (Array.isArray(opt)) {\n            defaultValue = opt[1];\n            opt = opt[0];\n        }\n        const dash = opt.indexOf(`-`);\n        if (dash < 0)\n            throw new Error(`Simple expression expects form of: 'elementid-attribute'`);\n        return {\n            variable: opt,\n            attribute: opt.slice(dash + 1),\n            id: opt.slice(0, dash),\n            defaultValue\n        };\n    });\n};\n/**\n * Reads the value of a CSS variable and assign it to HTML attributes or object field.\n *\n * ```js\n * const options = [\n *  // Set the 'width' attribute to the value of --some-css-variable to all elements with class 'blah'\n *  { query: `.blah`, variable: `some-css-variable`, attribute: `width` }\n *\n *  // Set #blah's 'size' attribute to the value of css variable '--size'\n *  { id: 'blah', variable: 'size', attribute: 'size' }\n *\n *  // Sets someEL.blah = css variable '--hue'\n *  { element: someEl, variable: `hue`, field: `blah` }\n * ]\n *\n * setFromCssVariables(document.body, ...options);\n * ```\n *\n * The first parameter is the context for which CSS variable values are fetched\n * as well as for resolving query selectors. This can usually be `document.body`.\n * @param context Context element which is needed for relative querying. Otherwise use document.body\n * @param options Details of what to do\n */\nexport const setFromCssVariables = (context, ...options) => {\n    const contextEl = resolveEl(context);\n    const style = window.getComputedStyle(contextEl);\n    for (const opt of options) {\n        const variable = Text.afterMatch(opt.variable, `--`);\n        let v = style.getPropertyValue(`--${variable}`);\n        if (v === null || v.length === 0) {\n            if (opt.defaultValue === undefined) {\n                continue;\n            }\n            else {\n                v = opt.defaultValue;\n            }\n        }\n        let query;\n        let els; //: SVGElement | HTMLElement | null | undefined;\n        if (`query` in opt && opt.query !== undefined) {\n            query = opt.query;\n        }\n        else if (`id` in opt && opt.id !== undefined) {\n            query = `#${opt.id}`;\n        }\n        else if (`object` in opt && opt.object !== undefined) {\n            els = Array.isArray(opt.object) ? opt.object : [opt.object];\n        }\n        if (query === undefined) {\n            // No query\n            if (els === undefined) {\n                // If there's no query or objects, there's nothing to do\n                throw new Error(`Missing 'query', 'id' or 'object' fields`);\n            }\n        }\n        else {\n            // Run query\n            els = [...contextEl.querySelectorAll(query)]; // as SVGElement | HTMLElement | null | undefined;\n        }\n        if (els === null)\n            continue;\n        if (els === undefined)\n            continue;\n        if (opt.attribute) {\n            for (const el of els) {\n                if (isHtmlElement(el)) {\n                    el.setAttribute(opt.attribute, v);\n                }\n                else {\n                    throw new Error(`Trying to set an attribute on something not a HTML element`, { cause: el });\n                }\n            }\n        }\n        else if (opt.field) {\n            for (const el of els) {\n                if (typeof el === `object`) {\n                    (el)[opt.field] = v;\n                }\n                else {\n                    throw new Error(`Trying to set field on something that is not an object (${typeof el})`, { cause: el });\n                }\n            }\n        }\n        else {\n            throw new Error(`Neither 'attribute' or 'field' to set is defined in option (${JSON.stringify(opt)})`);\n        }\n    }\n};\n/**\n * Computes the styles for `elt` (or defaults to document.body) using `fallback`\n * as a set of default values.\n *\n * ```js\n * // Fetch styles\n * const styles = getCssVariablesWithFallback({\n *  my_var: `red` // reads CSS variable '--my-var'\n * }, element);\n *\n * // Access --my-var, or if it doesn't exist returns 'red'\n * styles.my_var;\n * ```\n *\n * Hyphen case (eg 'my-var') is a common way of delimiting words in CSS variables, but\n * can't be (elegantly) used in object properties. Instead, use '_' in the\n * object key, which is replaced with '-'.\n *\n * The leading '--' is not needed either.\n * @param fallback\n * @param elt\n * @returns\n */\nexport function getCssVariablesWithFallback(fallback, elt) {\n    const styles = getComputedStyle(elt ?? document.body);\n    const entries = Object.entries(fallback);\n    const filledEntries = entries.map(entry => {\n        return [entry[0], getCssVariablesFromStyles(styles, entry[0], entry[1])];\n    });\n    return Object.fromEntries(filledEntries);\n}\n/**\n * Returns the value of a CSS variable. If it is no defined, returns `fallbackValue`;\n * ```js\n * // Returns the value of --fg, or 'white' otherwise\n * getCssVariable(`--fg`, `white`);\n * ```\n *\n * `--` prefix can be omitted:\n * ```js\n * getCssVariable(`fg`, `white`);\n * ```\n * @param cssVariable\n * @param fallbackValue\n * @returns\n */\nexport function getCssVariable(cssVariable, fallbackValue) {\n    if (!cssVariable.startsWith(`--`))\n        cssVariable = `--${cssVariable}`;\n    const fromCss = getComputedStyle(document.body).getPropertyValue(cssVariable).trim();\n    if (fromCss.length === 0)\n        return fallbackValue;\n    return fromCss;\n}\n/**\n * Sets CSS variables using an object.\n *\n * ```js\n * const vars = {\n *  my_var: `red`,\n *  my_size: 10\n * }\n *\n * // Set to document.body\n * setCssVariables(vars);\n *\n * // Set to an element\n * setCssVariables(vars, elem);\n *\n * // Or to a CSSStyleDeclaration\n * setCssVariables(vars, styles);\n * ```\n *\n * @param variables\n * @param stylesOrEl\n */\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-type-parameters\nexport function setCssVariables(variables, stylesOrEl) {\n    const styles = stylesOrEl === undefined ? document.body.style :\n        isHtmlElement(stylesOrEl) ? stylesOrEl.style : stylesOrEl;\n    for (const [key, value] of Object.entries(variables)) {\n        let variableName = key.replaceAll('_', '-');\n        if (!variableName.startsWith(`--`))\n            variableName = `--` + variableName;\n        styles.setProperty(variableName, value.toString());\n    }\n}\n/**\n * Returns a CSS variable from a CSS style declaration, or returning `fallback`.\n * ```js\n * // These will all access --my-var\n * getCssVariablesFromStyles(getComputedStyle(element), `--my-var`, `red`);\n * getCssVariablesFromStyles(getComputedStyle(element), `my-var`, `red`);\n * getCssVariablesFromStyles(getComputedStyle(element), `my_var`, `red`);\n * ```\n * @param styles\n * @param name\n * @param fallback\n * @returns\n */\nexport function getCssVariablesFromStyles(styles, name, fallback) {\n    if (!name.startsWith(`--`))\n        name = `--` + name;\n    name = name.replaceAll(`_`, `-`);\n    const v = styles.getPropertyValue(name);\n    if (v.length === 0) {\n        return fallback;\n    }\n    if (typeof fallback === `number`)\n        return parseFloat(v);\n    if (typeof fallback === `boolean`) {\n        if (v === `true`)\n            return true;\n        else if (v === `false`)\n            return false;\n    }\n    return v;\n}\n","import { resolveEl, resolveEls } from \"./resolve-el.js\";\n/**\n * Returns the value of `getBoundingClientRect` plus the width of all the borders\n * @param elOrQuery\n * @returns\n */\nexport const getBoundingClientRectWithBorder = (elOrQuery) => {\n    let el = resolveEl(elOrQuery);\n    const size = el.getBoundingClientRect();\n    if (el instanceof SVGElement) {\n        el = el.parentElement;\n    }\n    const border = getComputedPixels(el, `borderTopWidth`, `borderLeftWidth`, `borderRightWidth`, `borderBottomWidth`);\n    return {\n        x: size.x,\n        y: size.y,\n        width: size.width + border.borderLeftWidth + border.borderRightWidth,\n        height: size.height + border.borderTopWidth + border.borderBottomWidth\n    };\n};\n/**\n * Returns the computed measurements of CSS properties via [getComputedStyle](https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle).\n *\n * ```js\n * const v = getComputedPixels(`#some-el`, `borderTopWidth`, `borderLeftWidth`);\n * v.borderTopWidth;  // number\n * b.borderLeftWidth; // number\n * ```\n *\n * Throws an error if value from `getComputedStyle` is not a string or does not end in 'px'.\n * @param elOrQuery\n * @param properties\n * @returns\n */\nexport const getComputedPixels = (elOrQuery, ...properties) => {\n    const s = getComputedStyle(resolveEl(elOrQuery));\n    const returnValue = {};\n    for (const property of properties) {\n        const v = s[property];\n        if (typeof v === `string`) {\n            if (v.endsWith(`px`)) {\n                returnValue[property] = Number.parseFloat(v.substring(0, v.length - 2));\n            }\n            else {\n                throw new Error(`Property '${String(property)}' does not end in 'px'. Value: ${v}`);\n            }\n        }\n        else {\n            throw new Error(`Property '${String(property)}' is not type string. Got: ${typeof v} Value: ${v}`);\n        }\n    }\n    return returnValue;\n};\n/**\n * If `value` is _true_, the provided CSS class is added to element(s), otherwise it is removed.\n *\n * ```js\n * setClass(`#someId`, true, `activated`); // Add 'activated'\n * setClass(`#someId`, false, `activated`); // Removes 'activated'\n * ```\n *\n * @param selectors\n * @param value\n * @param cssClass\n * @returns\n */\nexport const setCssClass = (selectors, value, cssClass) => {\n    const elements = resolveEls(selectors);\n    if (elements.length === 0)\n        return;\n    for (const element of elements) {\n        if (value)\n            element.classList.add(cssClass);\n        else\n            element.classList.remove(cssClass);\n    }\n};\n/**\n * Toggles a CSS class on all elements that match selector.\n *\n * ```js\n * setCssToggle(`span`, `activated`); // Toggles the 'activated' class on all SPAN elements\n * ```\n *\n * Uses `HTMLElement.classList.toggle`\n * @param selectors\n * @param cssClass\n * @returns\n */\nexport const setCssToggle = (selectors, cssClass) => {\n    const elements = resolveEls(selectors);\n    if (elements.length === 0)\n        return;\n    for (const element of elements) {\n        element.classList.toggle(cssClass);\n    }\n};\n/**\n * Sets the CSS 'display' property\n *\n * ```js\n * setCssDisplay(`span`, `block`); // Sets display:block for all spans\n * ```\n *\n * @param selectors\n * @param value\n * @returns\n */\nexport const setCssDisplay = (selectors, value) => {\n    const elements = resolveEls(selectors);\n    if (elements.length === 0)\n        return;\n    for (const element of elements) {\n        (element).style.display = value;\n    }\n};\n","import { fromObject } from \"./data-table.js\";\n// TODO Visually show data which has changed since last update\n// TODO Click on a field to show a sparkline for it\n/**\n * Creates a simple display for data. Designed to show ixfx state data\n *\n * ```js\n * // Create once\n * const display = new DataDisplay();\n *\n * // Call .update to show state\n * display.update(state);\n * ```\n */\nexport class DataDisplay {\n    dataTable;\n    /**\n     * Constructor\n     * @param options Options\n     */\n    constructor(options = {}) {\n        const theme = options.theme ?? `dark`;\n        const existing = document.querySelector(`#ixfx-data-display`);\n        if (existing !== null)\n            throw new Error(`DataDisplay already loaded on this page`);\n        const container = document.createElement(`div`);\n        container.id = `ixfx-data-display`;\n        container.classList.add(`theme-${theme}`);\n        const css = document.createElement(`style`);\n        css.textContent = `\n    #ixfx-data-display {\n      background: white;\n      color: black;\n      border: 2px solid hsl(0deg 0.61% 90%);\n      border-radius: 4px;\n      z-index: 1000;\n      opacity: 40%;\n      padding: 1em;\n      font-family: monospace;\n      position: fixed;\n      right: 1em;\n      top: 1em;\n    }\n    #ixfx-data-display.theme-dark {\n      background: black;\n      color: white;\n      border: 2px solid hsl(0deg 0.61% 10%);\n    }\n    #ixfx-data-display:hover {\n      opacity: 100%;\n    }\n    #ixfx-data-display table {\n      border-collapse: collapse;\n    }\n    #ixfx-data-display tr:not(:last-child) {\n      border-bottom: 2px solid hsl(0deg 0.61% 90%);\n    }\n    #ixfx-data-display.dark tr:not(:last-child) {\n      border-bottom: 2px solid hsl(0deg 0.61% 10%);\n    }\n    #ixfx-data-display td {\n      padding-bottom: 0.4em;\n      padding-top: 0.4em;\n    }\n    #ixfx-data-display .label {\n      color: hsl(0deg 0.61% 60%);\n      text-align: right;\n      padding-right: 0.5em;\n    }\n    #ixfx-data-display.theme-dark .label {\n      color: gray;\n    }\n    `;\n        container.style.display = `inline-block`;\n        document.body.append(css);\n        document.body.append(container);\n        this.dataTable = fromObject(container, undefined, {\n            objectsAsTables: true,\n            ...options\n        });\n    }\n    update(data) {\n        this.dataTable.update(data);\n    }\n}\n","import { resolveEls } from \"./resolve-el.js\";\nexport function setText(selectors, value) {\n    return setProperty(`textContent`, selectors, value);\n}\n;\n/**\n * Sets the innerHTML of an element.\n *\n * ```js\n * setHtml(`#some-el`, `<b>hello</b>`);\n * ```\n * @param selectors\n * @param value\n * @returns\n */\nexport function setHtml(selectors, value) {\n    return setProperty(`innerHTML`, selectors, value);\n}\n;\n/**\n * Sets some property on an element\n *\n * ```js\n * setProperty(`width`, `canvas`, 100); // Set the width property to 100\n * ```\n *\n * If `value` is an object, converts to JSON first.\n * @param property\n * @param selectors\n * @param value\n * @returns\n */\nexport function setProperty(property, selectors, value) {\n    let elements = [];\n    const set = (v) => {\n        const typ = typeof v;\n        const vv = (typ === `string` || typ === `number` || typ === `boolean`) ? v :\n            JSON.stringify(v);\n        if (elements.length === 0) {\n            elements = resolveEls(selectors);\n        }\n        for (const element of elements) {\n            element[property] = vv;\n        }\n        return vv;\n    };\n    return value === undefined ? set : set(value);\n}\n;\n","import { setCssClass, setCssDisplay, setCssToggle } from \"./css.js\";\nimport { resolveEl, resolveEls } from \"./resolve-el.js\";\nimport { setHtml, setText } from \"./set-property.js\";\n/**\n * Returns an object with handy functions for working on/against the provided selector.\n *\n * ```js\n * const e = el(`#my-element`);\n * e.text(`hello`);           // Set the inner text of the elemenet\n * e.cssDisplay(`block`);    // Sets display:block\n * e.cssToggle(`activated`);  // Toggles the 'activated' CSS class\n * e.cssClass(true, `activated`); // Turns on the 'activated' CSS class\n * e.el();                    // Returns the HTML Element\n * ```\n *\n * The selector is only queried when created. Use {@link elRequery} to continually\n * re-query the selector before each operation.\n *\n * @param selectors\n * @returns\n */\nexport const el = (selectors) => {\n    const elements = resolveEls(selectors);\n    const text = setText(elements);\n    const html = setHtml(elements);\n    return {\n        text,\n        html,\n        cssDisplay: (value) => { setCssDisplay(elements, value); },\n        cssClass: (value, cssClass) => { setCssClass(elements, value, cssClass); },\n        cssToggle: (cssClass) => { setCssToggle(elements, cssClass); },\n        el: () => elements[0],\n        els: () => elements\n    };\n};\nexport const elRequery = (selectors) => ({\n    text: (value) => setText(selectors, value),\n    html: (value) => setHtml(selectors, value),\n    cssDisplay: (value) => { setCssDisplay(selectors, value); },\n    cssClass: (value, cssClass) => { setCssClass(selectors, value, cssClass); },\n    cssToggle: (cssClass) => { setCssToggle(selectors, cssClass); },\n    el: () => resolveEl(selectors),\n    els: () => resolveEls(selectors)\n});\n","import { resolveEl } from \"./resolve-el.js\";\nimport { getComputedPixels } from \"./css.js\";\nimport { Rects } from \"@ixfx/geometry\";\n/**\n * Consider using static methods:\n *\n * ```js\n * // Resize an <SVG> element to match viewport\n * Dom.ElementSizer.svgViewport(svg);\n *\n * // Resize canvas to match its parent\n * Dom.ElementSizer.canvasParent(canvas);\n *\n * // Resize canvas to match viewport\n * Dom.ElementSizer.canvasViewport(canvas);\n * ```\n */\nexport class ElementSizer {\n    #stretch;\n    #size;\n    #naturalSize;\n    #naturalRatio;\n    #viewport;\n    #onSetSize;\n    #el;\n    #containerEl;\n    #disposed = false;\n    #resizeObservable;\n    constructor(elOrQuery, options) {\n        this.#el = resolveEl(elOrQuery);\n        this.#containerEl = options.containerEl ? resolveEl(options.containerEl) : this.#el.parentElement;\n        this.#stretch = options.stretch ?? `none`;\n        this.#onSetSize = options.onSetSize;\n        this.#size = Rects.Empty;\n        let naturalSize = options.naturalSize;\n        if (naturalSize === undefined) {\n            naturalSize = this.#el.getBoundingClientRect();\n        }\n        this.#naturalRatio = 1;\n        this.#naturalSize = naturalSize;\n        this.setNaturalSize(naturalSize);\n        this.#viewport = Rects.EmptyPositioned;\n        if (this.#containerEl === document.body) {\n            this.#byViewport();\n        }\n        else {\n            this.#byContainer();\n        }\n    }\n    dispose(reason) {\n        if (this.#disposed)\n            return;\n        this.#disposed = true;\n        if (this.#resizeObservable) {\n            this.#resizeObservable.disconnect();\n            this.#resizeObservable = undefined;\n        }\n    }\n    static canvasParent(canvasElementOrQuery, options) {\n        const el = resolveEl(canvasElementOrQuery);\n        const er = new ElementSizer(el, {\n            ...options,\n            onSetSize(size, el) {\n                el.width = size.width;\n                el.height = size.height;\n                if (options.onSetSize)\n                    options.onSetSize(size, el);\n            },\n        });\n        return er;\n    }\n    static canvasViewport(canvasElementOrQuery, options) {\n        const el = resolveEl(canvasElementOrQuery);\n        el.style.position = `absolute`;\n        el.style.zIndex = (options.zIndex ?? 0).toString();\n        el.style.left = `0px`;\n        el.style.top = `0px`;\n        const opts = { ...options, containerEl: document.body };\n        return this.canvasParent(canvasElementOrQuery, opts);\n    }\n    /**\n     * Size an SVG element to match viewport\n     * @param svg\n     * @returns\n     */\n    static svgViewport(svg, onSizeSet) {\n        const er = new ElementSizer(svg, {\n            containerEl: document.body,\n            stretch: `both`,\n            onSetSize(size) {\n                svg.setAttribute(`width`, size.width.toString());\n                svg.setAttribute(`height`, size.height.toString());\n                if (onSizeSet)\n                    onSizeSet(size);\n            },\n        });\n        return er;\n    }\n    #byContainer() {\n        const c = this.#containerEl;\n        if (!c)\n            throw new Error(`No container element`);\n        // Listen for resize\n        const r = new ResizeObserver((entries) => {\n            this.#onParentResize(entries);\n        });\n        r.observe(c);\n        // Get current value\n        const current = this.#computeSizeBasedOnParent(c.getBoundingClientRect());\n        this.size = current;\n        this.#resizeObservable = r;\n    }\n    #byViewport() {\n        const r = new ResizeObserver((entries) => {\n            this.#onViewportResize();\n        });\n        r.observe(document.documentElement);\n        this.#resizeObservable = r;\n        this.#onViewportResize();\n    }\n    #onViewportResize() {\n        this.size = { width: window.innerWidth, height: window.innerHeight };\n        this.#viewport = {\n            x: 0, y: 0,\n            ...this.size\n        };\n    }\n    /**\n     * Sets the 'natural' size of an element.\n     * This can also be specified when creating ElementSizer.\n     * @param size\n     */\n    setNaturalSize(size) {\n        this.#naturalSize = size;\n        this.#naturalRatio = size.width / size.height;\n    }\n    get naturalSize() {\n        return this.#naturalSize;\n    }\n    get viewport() {\n        return this.#viewport;\n    }\n    #computeSizeBasedOnParent(parentSize) {\n        let { width, height } = parentSize;\n        let stretch = this.#stretch;\n        if (stretch === `min`) {\n            stretch = width < height ? `width` : `height`;\n        }\n        else if (stretch === `max`) {\n            stretch = width > height ? `width` : `height`;\n        }\n        if (stretch === `width`) {\n            height = width / this.#naturalRatio;\n        }\n        else if (stretch === `height`) {\n            width = height * this.#naturalRatio;\n        }\n        // If we have a border, take that into account\n        if (this.#el instanceof HTMLElement) {\n            const b = getComputedPixels(this.#el, `borderTopWidth`, `borderLeftWidth`, `borderRightWidth`, `borderBottomWidth`);\n            width -= (b.borderLeftWidth + b.borderRightWidth);\n            height -= (b.borderTopWidth + b.borderBottomWidth);\n        }\n        return { width, height };\n    }\n    #onParentResize(args) {\n        const box = args[0].contentBoxSize[0];\n        const parentSize = { width: box.inlineSize, height: box.blockSize };\n        this.size = this.#computeSizeBasedOnParent(parentSize);\n        this.#viewport = {\n            x: 0, y: 0,\n            width: parentSize.width,\n            height: parentSize.height\n        };\n    }\n    set size(size) {\n        Rects.guard(size, `size`);\n        this.#size = size;\n        this.#onSetSize(size, this.#el);\n    }\n    get size() {\n        return this.#size;\n    }\n}\n","import { getErrorMessage } from \"@ixfx/debug\";\n/**\n * Creates an error handler to show errors on-screen.\n * This is useful when testing on mobile devices that lack access to the console.\n *\n * ```js\n * const e = defaultErrorHandler();\n * ```\n *\n * Manual control:\n * ```js\n * const e = defaultErrorHandler();\n * e.show(someError);\n * e.hide();\n * ```\n * @returns\n */\nexport const defaultErrorHandler = () => {\n    let enabled = true;\n    const container = document.createElement(`div`);\n    container.style.color = `black`;\n    container.style.border = `2px solid red`;\n    container.style.backgroundColor = `hsl(0, 80%, 90%)`;\n    container.style.padding = `1em`;\n    container.style.display = `none`;\n    container.style.top = `1em`;\n    container.style.left = `1em`;\n    container.style.position = `absolute`;\n    container.style.fontFamily = `monospace`;\n    const messageElement = document.createElement(`div`);\n    messageElement.style.maxWidth = `50vw`;\n    messageElement.style.maxHeight = `50vh`;\n    messageElement.style.overflowY = `scroll`;\n    container.innerHTML = `<h1>Error</h1>`;\n    container.append(messageElement);\n    const styleButton = (b) => {\n        b.style.padding = `0.3em`;\n        b.style.marginTop = `1em`;\n    };\n    const buttonClose = document.createElement(`button`);\n    buttonClose.textContent = `Close`;\n    buttonClose.addEventListener(`click`, () => {\n        hide();\n    });\n    const buttonStop = document.createElement(`button`);\n    buttonStop.textContent = `Stop displaying errors`;\n    buttonStop.addEventListener(`click`, () => {\n        enabled = false;\n        hide();\n    });\n    styleButton(buttonClose);\n    styleButton(buttonStop);\n    container.append(buttonClose);\n    container.append(buttonStop);\n    document.body.append(container);\n    const show = (ex) => {\n        container.style.display = `inline`;\n        messageElement.innerHTML += ex.stack ? `<pre>${ex.stack}</pre>` : `<p>${getErrorMessage(ex)}</p>`;\n    };\n    const hide = () => {\n        container.style.display = `none`;\n    };\n    window.onerror = (message, url, lineNo, colNo, error) => {\n        if (enabled) {\n            if (error) {\n                console.log(error);\n                show(error);\n            }\n            else {\n                console.log(message);\n                show(message);\n            }\n        }\n    };\n    window.addEventListener(`unhandledrejection`, (event) => {\n        console.log(event.reason);\n        if (enabled) {\n            show(event.reason);\n        }\n    });\n    return { show, hide };\n};\n","export const addShadowCss = (parentEl, styles) => {\n    const styleEl = document.createElement(`style`);\n    //eslint-disable-next-line functional/immutable-data\n    styleEl.textContent = styles;\n    //eslint-disable-next-line functional/no-let\n    let shadowRoot;\n    if (parentEl.shadowRoot) {\n        shadowRoot = parentEl.shadowRoot;\n        //eslint-disable-next-line functional/immutable-data\n        shadowRoot.innerHTML = ``;\n    }\n    else {\n        shadowRoot = parentEl.attachShadow({ mode: `open` });\n    }\n    shadowRoot.append(styleEl);\n    return shadowRoot;\n};\n","import { resolveEl } from './resolve-el.js';\nimport { addShadowCss } from './shadow-dom.js';\n/**\n * Allows writing to a DOM element in console.log style. Element grows in size, so use\n * something like `overflow-y: scroll` on its parent\n *\n * ```\n * const l = log(`#dataStream`); // Assumes HTML element with id `dataStream` exists\n * l.log(`Hi`);\n * l.log(); // Displays a horizontal rule\n *\n * const l = log(document.getElementById(`dataStream`), {\n *  timestamp: true,\n *  truncateEntries: 20\n * });\n * l.log(`Hi`);\n * l.error(`Some error`); // Adds class `error` to line\n * ```\n *\n * For logging high-throughput streams:\n * ```\n * // Silently drop log if it was less than 5ms since the last\n * const l = log(`#dataStream`, { minIntervalMs: 5 });\n *\n * // Only the last 100 entries are kept\n * const l = log(`#dataStream`, { capacity: 100 });\n * ```\n *\n * @param domQueryOrElement Element or id of element\n * @param opts\n */\nexport const log = (domQueryOrElement, opts = {}) => {\n    const { capacity = 0, monospaced = true, timestamp = false, collapseDuplicates = true, css = `` } = opts;\n    let added = 0;\n    let lastLog;\n    let lastLogRepeats = 0;\n    const parentElement = resolveEl(domQueryOrElement);\n    const fontFamily = monospaced\n        ? `Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", Monaco, \"Courier New\", Courier, monospace`\n        : `normal`;\n    const shadowRoot = addShadowCss(parentElement, `\n  .log {\n    font-family: ${fontFamily};\n    background-color: var(--code-background-color);\n    padding: var(--padding1, 0.2em);\n    overflow-y: auto;\n    height:100%;\n  }\n  .timestamp {\n    margin-right: 0.5em;\n    opacity: 0.5;\n    font-size: 70%;\n    align-self: center;\n  }\n  .line {\n    display: flex;\n    padding-bottom: 0.1em;\n    padding-top: 0.1em;\n  }\n  .line:hover {\n  \n  }\n  .error {\n    color: red;\n  }\n  .badge {\n    border: 1px solid currentColor;\n    align-self: center;\n    font-size: 70%;\n    padding-left: 0.2em;\n    padding-right: 0.2em;\n    border-radius: 1em;\n    margin-left: 0.5em;\n    margin-right: 0.5em;\n  }\n  .msg {\n    flex: 1;\n    word-break: break-word;\n  }\n  ${css}\n  `);\n    const el = document.createElement(`div`);\n    el.className = `log`;\n    shadowRoot.append(el);\n    const error = (messageOrError) => {\n        const line = document.createElement(`div`);\n        if (typeof messageOrError === `string`) {\n            line.innerHTML = messageOrError;\n        }\n        else if (messageOrError instanceof Error) {\n            const stack = messageOrError.stack;\n            line.innerHTML = stack === undefined ? messageOrError.toString() : stack.toString();\n        }\n        else {\n            line.innerHTML = messageOrError;\n        }\n        line.classList.add(`error`);\n        append(line);\n        lastLog = undefined;\n        lastLogRepeats = 0;\n    };\n    let lastLogTime = 0;\n    const warn = (whatToLog = ``) => {\n        const element = log(whatToLog);\n        if (!element)\n            return element;\n        element.classList.add(`warning`);\n        return element;\n    };\n    const log = (whatToLog = ``) => {\n        let message;\n        const interval = window.performance.now() - lastLogTime;\n        if (opts.minIntervalMs && interval < opts.minIntervalMs)\n            return;\n        lastLogTime = window.performance.now();\n        if (typeof whatToLog === `object`) {\n            message = JSON.stringify(whatToLog);\n        }\n        else if (whatToLog === undefined) {\n            message = `(undefined)`;\n        }\n        else if (whatToLog === null) {\n            message = `(null)`;\n        }\n        else if (typeof whatToLog === `number`) {\n            if (Number.isNaN(message))\n                message = `(NaN)`;\n            message = whatToLog.toString();\n        }\n        else {\n            message = whatToLog;\n        }\n        if (message.length === 0) {\n            const rule = document.createElement(`hr`);\n            lastLog = undefined;\n            append(rule);\n        }\n        else if (message === lastLog && collapseDuplicates) {\n            const lastElement = el.firstElementChild;\n            let lastBadge = lastElement.querySelector(`.badge`);\n            if (lastBadge === null) {\n                lastBadge = document.createElement(`div`);\n                lastBadge.className = `badge`;\n                lastElement.insertAdjacentElement(`beforeend`, lastBadge);\n            }\n            if (lastElement !== null) {\n                lastBadge.textContent = (++lastLogRepeats).toString();\n            }\n            return lastElement;\n        }\n        else {\n            const line = document.createElement(`div`);\n            line.textContent = message;\n            append(line);\n            lastLog = message;\n            return line;\n        }\n    };\n    const append = (line) => {\n        if (timestamp) {\n            const wrapper = document.createElement(`div`);\n            const timestamp = document.createElement(`div`);\n            timestamp.className = `timestamp`;\n            timestamp.textContent = new Date().toLocaleTimeString();\n            wrapper.append(timestamp, line);\n            line.classList.add(`msg`);\n            wrapper.classList.add(`line`);\n            line = wrapper;\n        }\n        else {\n            line.classList.add(`line`, `msg`);\n        }\n        if (opts.reverse) {\n            el.append(line);\n        }\n        else {\n            el.insertBefore(line, el.firstChild);\n        }\n        if (capacity > 0 && ++added > capacity * 2) {\n            while (added > capacity) {\n                el.lastChild?.remove();\n                added--;\n            }\n        }\n        if (opts.reverse) {\n            // Scroll to bottom\n            el.scrollTop = el.scrollHeight;\n        }\n        lastLogRepeats = 0;\n    };\n    const clear = () => {\n        el.innerHTML = ``;\n        lastLog = undefined;\n        lastLogRepeats = 0;\n        added = 0;\n    };\n    const dispose = () => {\n        el.remove();\n    };\n    return {\n        error,\n        log,\n        warn,\n        append,\n        clear,\n        dispose,\n        get isEmpty() {\n            return added === 0;\n        },\n    };\n};\n","import { getErrorMessage } from '@ixfx/debug';\nimport { log } from './log.js';\nimport { resolveEl } from './resolve-el.js';\nimport { afterMatch } from '@ixfx/core/text';\n/**\n * Adds an inline console to the page. A DIV is added to display log messages.\n *\n * Captures all console.log, console.warn and console.error calls, as well as unhandled exceptions.\n *\n * ```js\n * // Adds the DIV and intercepts console logs\n * inlineConsole();\n *\n * console.log(`Hello`); // message is displayed in the inline console\n * ```\n * @param options\n */\nexport const inlineConsole = (options = {}) => {\n    const original = {\n        log: console.log,\n        error: console.error,\n        warn: console.warn\n    };\n    const witholdCss = options.witholdCss ?? false;\n    const insertIntoEl = options.insertIntoEl;\n    let logElement;\n    if (insertIntoEl) {\n        logElement = resolveEl(insertIntoEl);\n    }\n    else {\n        logElement = document.createElement(`DIV`);\n        logElement.id = `ixfx-log`;\n        document.body.prepend(logElement);\n    }\n    if (!witholdCss) {\n        logElement.style.position = `fixed`;\n        logElement.style.left = `0px`;\n        logElement.style.top = `0px`;\n        logElement.style.pointerEvents = `none`;\n        logElement.style.display = `none`;\n    }\n    const logger = log(logElement, options);\n    const visibility = (show) => {\n        logElement.style.display = show ? `block` : `none`;\n    };\n    console.error = (message, ...optionalParameters) => {\n        logger.error(message);\n        if (optionalParameters.length > 0) {\n            logger.error(optionalParameters);\n        }\n        original.error(message, ...optionalParameters);\n        visibility(true);\n    };\n    console.warn = (message, ...optionalParameters) => {\n        logger.warn(message);\n        if (optionalParameters.length > 0) {\n            logger.warn(optionalParameters);\n        }\n        visibility(true);\n    };\n    console.log = (message, ...optionalParameters) => {\n        logger.log(message);\n        if (optionalParameters.length > 0) {\n            logger.log(optionalParameters);\n        }\n        original.log(message, ...optionalParameters);\n        visibility(true);\n    };\n    window.onerror = (event, source, lineno, _colno, error) => {\n        const abbreviatedSource = source === undefined ? `` : afterMatch(source, `/`, { fromEnd: true });\n        const eventString = getErrorMessage(error);\n        logger.error(eventString + ` (${abbreviatedSource}:${lineno})`);\n        visibility(true);\n    };\n    window.addEventListener('unhandledrejection', function (e) {\n        logger.error(e.reason);\n        visibility(true);\n    });\n};\n","import { uniqueInstances } from \"@ixfx/core\";\n/**\n * Async iterator over DOM query strings\n * ```js\n * query(`div`); // all DIVs\n * query([`.class`, `.and-other-class`]); // All things with these two classes\n * ```\n * @param queryOrElement\n * @returns\n */\nexport async function* query(queryOrElement, options = {}) {\n    if (typeof queryOrElement === `string`) {\n        return query([queryOrElement], options);\n    }\n    else if (typeof queryOrElement === `object` && `nodeName` in queryOrElement) {\n        return query([queryOrElement], options);\n    }\n    const ensureUnique = options ?? false;\n    const isUnique = ensureUnique ? uniqueInstances() : (_) => true;\n    if (Array.isArray(queryOrElement)) {\n        for (const item of queryOrElement) {\n            if (typeof item === `string`) {\n                for (const element of document.querySelectorAll(item)) {\n                    const elementProper = element;\n                    if (isUnique(elementProper)) {\n                        yield elementProper;\n                    }\n                }\n            }\n            else {\n                if (isUnique(item)) {\n                    yield item;\n                }\n            }\n        }\n    }\n    else {\n        for await (const item of queryOrElement) {\n            if (typeof item === `string`) {\n                for (const element of document.querySelectorAll(item)) {\n                    if (isUnique(element)) {\n                        yield element;\n                    }\n                }\n            }\n            else {\n                if (isUnique(item)) {\n                    yield item;\n                }\n            }\n        }\n    }\n}\n","import { shortGuid } from \"@ixfx/random\";\nimport { resolveEl } from \"./resolve-el.js\";\nexport const tabSet = (options) => {\n    const panels = options.panels;\n    const preselectId = options.preselectId ?? panels[0].id;\n    const guid = `tabset-${shortGuid()}`;\n    const parentEl = resolveEl(options.parent);\n    const switcher = `\n  <div class=\"ixfx-tabset\" id=\"${guid}\">\n    <fieldset class=\"ixfx-tabset-controls\">\n    ${panels.map(p => {\n        const panelId = `${guid}-${p.id}-select`;\n        return `<input type=\"radio\" name=\"${guid}-tabs\" id=\"${panelId}\" data-tabset=\"${p.id}\"><label for=\"${panelId}\">${p.label}</label>`;\n    }).join(``)}\n    </fieldset>\n    <div class=\"ixfx-tabset-host\" id=\"${guid}-host\"></div>\n  </div>\n  `;\n    parentEl.innerHTML = switcher;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const hostEl = document.getElementById(`${guid}-host`);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const tabSetEl = document.getElementById(guid);\n    tabSetEl.querySelector(`fieldset`)?.addEventListener(`change`, event => {\n        const el = event.target;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        select(el.getAttribute(`data-tabset`));\n    });\n    let currentPanel;\n    const select = (id) => {\n        const newPanel = panels.find(p => p.id === id);\n        const priorPanel = currentPanel;\n        if (options.onPanelChanging) {\n            const allow = options.onPanelChanging(priorPanel, newPanel);\n            if (typeof allow === `boolean` && !allow)\n                return; // Cancel panel change\n        }\n        if (priorPanel) {\n            priorPanel.dismount();\n        }\n        currentPanel = newPanel;\n        if (newPanel) {\n            newPanel.mount(hostEl);\n            const domId = `#${guid}-${id}-select`;\n            const inputEl = tabSetEl.querySelector(domId);\n            if (inputEl) {\n                inputEl.checked = true;\n            }\n            else {\n                console.warn(`Could not find INPUT element for panel id: ${id} (${domId})`);\n            }\n        }\n        if (options.onPanelChange)\n            options.onPanelChange(priorPanel, newPanel);\n    };\n    select(preselectId);\n    let warned = false;\n    const notify = (name, args) => {\n        if (!currentPanel)\n            return;\n        if (currentPanel.notify) {\n            currentPanel.notify(name, args);\n        }\n        else if (!warned) {\n            warned = true;\n            console.warn(`TabbedPanel.notify dropping notification '${name}'. Panel implementation is missing 'notify' function`);\n        }\n    };\n    return { select, panels, hostEl, tabSetEl, notify };\n};\n","import JSON5 from 'json5';\nimport { resolveEl } from './resolve-el.js';\nimport { getPointParameter } from '@ixfx/geometry/point';\nimport { cardinal } from '@ixfx/geometry/rect';\nimport { Points } from '@ixfx/geometry';\n/**\n * Convert an absolute point to relative, in different coordinate spaces.\n *\n * When calling the returned function, the input value must be in the same\n * scale as the intended output scale.\n *\n * Viewport-relative is used by default.\n *\n * @example Get relative position of click in screen coordinates\n * ```js\n * const f = pointScaler({ to: 'screen' });\n * document.addEventListener('click', evt => {\n *  const screenRelative = f(evt.screenX, evt.screenY);\n *  // Yields {x,y} on 0..1 scale\n * });\n * ```\n *\n * @example Get relative position of click in viewport coordinates\n * ```js\n * const f = pointScaler({ to: 'viewport' });\n * document.addEventListener('click', evt => {\n *  const viewportRelative = f(evt.clientX, evt.clientY);\n *  // Yields {x,y} on 0..1 scale\n * });\n * ```\n *\n * @example Get relative position of click in document coordinates\n * ```js\n * const f = pointScaler({ to: 'document' });\n * document.addEventListener('click', evt => {\n *  const documentRelative = f(evt.pageX, evt.pageY);\n *  // Yields {x,y} on 0..1 scale\n * });\n * ```\n *\n * @param reference\n * @returns\n */\nexport const pointScaler = (reference = `viewport`) => {\n    switch (reference) {\n        case `viewport`: {\n            return (a, b) => {\n                const pt = getPointParameter(a, b);\n                return Object.freeze({\n                    x: pt.x / window.innerWidth,\n                    y: pt.y / window.innerHeight,\n                });\n            };\n        }\n        case `screen`: {\n            return (a, b) => {\n                const pt = getPointParameter(a, b);\n                return Object.freeze({\n                    x: pt.x / screen.width,\n                    y: pt.y / screen.height,\n                });\n            };\n        }\n        case `document`: {\n            return (a, b) => {\n                const pt = getPointParameter(a, b);\n                return Object.freeze({\n                    x: pt.x / document.body.scrollWidth,\n                    y: pt.y / document.body.scrollHeight,\n                });\n            };\n        }\n        default: {\n            throw new Error(`Unknown 'reference' parameter: ${JSON.stringify(reference)}`);\n        }\n    }\n};\n/**\n * Returns a function which yields element position in target coordinate space with optional scaling.\n * Live position is calculated when the function is invoked.\n * Use {@link positionRelative} to simply get relative position of element in given coordinate space.\n *\n * @example Absolute position of #blah in viewport coordinate space\n * ```js\n * const f = positionFn('#blah');\n * f(); // Yields: {x,y}\n * // Or:\n * positionFn('#blah')(); // Immediately invoke\n * ```\n *\n * @example Relative position of element in viewport-space\n * ```js\n * const f = positionFn(evt.target, { relative: true });\n * f(); // Yields: {x,y}\n * ```\n *\n * @example Relative position of #blah in screen-space\n * ```js\n * const f = positionFn('#blah', { target: 'screen', relative: true });\n * f(); // Yields: {x,y}\n * ```\n *\n * By default, top-left corner (north west) is used. Other cardinal points or 'center' can be specified:\n * ```js\n * // Relative position by center\n * positionFn('#blah', { relative: true, anchor: 'center' });\n *\n * // ...by bottom-right corner\n * positionFn('#blah', { relative: true, anchor: 'se' });\n * ```\n *\n * This function is useful if you have a stable DOM element and conversion target.\n * If the DOM element is changing continually, consider using {@link viewportToSpace} to\n * convert from viewport coordinates to target coordinates:\n *\n * ```js\n * // Eg.1 Absolute coords in screen space\n * const vpToScreen = viewportToSpace('screen');\n * vpToScreen(el.getBoundingClientRect());\n *\n * // Eg.2 Relative coords in viewport space\n * const vpRelative = pointScaler(); // Re-usable scaler. Default uses viewport\n * vpRelative(el.getBoundingClientRect()); // Yields: { x,y }\n *\n * // Eg.3 Relative coords in screen space\n * const vpToScreen = viewportToSpace('screen'); // Map viewport->screen\n * const screenRelative = pointScaler('screen'); // Scale screen units\n *\n * // Combine into a resuable function that takes an element\n * const mapAndScale = (el) => screenRelative(vpToScreen(el.getBoundingClientRect()));\n *\n * // Call\n * mapAndScale(document.getElementById('blah')); // Yields: { x,y }\n * ```\n * @param domQueryOrEl\n * @param options\n * @returns\n */\n// eslint-disable-next-line unicorn/prevent-abbreviations\nexport const positionFn = (domQueryOrEl, options = {}) => {\n    const targetSpace = options.target ?? `viewport`;\n    const relative = options.relative ?? false;\n    const anchor = options.anchor ?? `nw`;\n    const el = resolveEl(domQueryOrEl);\n    const vpToSpace = viewportToSpace(targetSpace);\n    if (relative) {\n        const s = pointScaler(targetSpace);\n        return () => s(vpToSpace(cardinal(el.getBoundingClientRect(), anchor)));\n    }\n    else {\n        return () => vpToSpace(cardinal(el.getBoundingClientRect(), anchor));\n    }\n};\n/**\n * Returns a {x,y} Point on a cardinal position of element.\n * ```\n * // Top edge, middle horizontal position\n * const pos = cardinalPosition(`#blah`, `n`);\n * ```\n * @param domQueryOrEl\n * @param anchor\n * @returns\n */\nexport const cardinalPosition = (domQueryOrEl, anchor = `nw`) => {\n    const el = resolveEl(domQueryOrEl);\n    return cardinal(el.getBoundingClientRect(), anchor);\n};\n/**\n * Returns relative position of element in target coordinate space, or viewport by default.\n * Relative means that { x:0.5, y: 0.5 } is the middle of the target space. Eg for viewport, that means its the middle of the browser window.\n * ```js\n * // These all yield { x, y }\n * elPositionRelative('#blah');\n * elPositionRelative(evt.target, 'screen');\n * ```\n * @param domQueryOrEl DOM query or element\n * @param target Target coordinate space, or viewport by default\n * @returns Point\n */\nexport const positionRelative = (domQueryOrEl, target = `viewport`) => {\n    const f = positionFn(domQueryOrEl, { relative: true, target });\n    return f();\n};\n/**\n * Returns a function that converts input viewport coordinate space\n * to an output coordinate space.\n *\n * ```js\n * // f() will convert from viewport to document coordinate space\n * const f = viewportToSpace('document');\n *\n * // {x:100,y:100} is viewport coordinate space\n * f(100,100); // Yields: { x, y } converted to document space\n * ```\n *\n * Or immediately invoke for one-off use:\n * ```js\n * viewportToSpace('document')(100,100); // Yields: { x, y }\n * ```\n * @param targetSpace\n * @returns\n */\nexport const viewportToSpace = (targetSpace = `viewport`) => {\n    switch (targetSpace) {\n        case `screen`: {\n            return (a, b) => {\n                const pt = getPointParameter(a, b);\n                return Object.freeze({\n                    x: pt.x + window.screenX,\n                    y: pt.y + window.screenY,\n                });\n            };\n        }\n        case `document`: {\n            return (a, b) => {\n                const pt = getPointParameter(a, b);\n                return Object.freeze({\n                    x: pt.x + window.scrollX,\n                    y: pt.y + window.scrollY,\n                });\n            };\n        }\n        case `viewport`: {\n            return (a, b) => {\n                const pt = getPointParameter(a, b);\n                return Object.freeze({\n                    x: pt.x,\n                    y: pt.y,\n                });\n            };\n        }\n        default: {\n            throw new Error(`Unexpected target coordinate space: ${targetSpace}. Expected: viewport, document or screen`);\n        }\n    }\n};\n/**\n * Position element by relative coordinate. Relative to window dimensions by default\n * @param relativePos Window-relative coordinate. 0.5/0.5 is middle of window.\n */\nexport const positionFromMiddle = (domQueryOrEl, relativePos, relativeTo = `window`) => {\n    if (!domQueryOrEl)\n        throw new Error(`domQueryOrEl is null or undefined`);\n    const el = resolveEl(domQueryOrEl);\n    // Convert relative to absolute units\n    const absPosition = Points.multiply(relativePos, window.innerWidth, window.innerHeight);\n    const thingRect = el.getBoundingClientRect();\n    const offsetPos = Points.subtract(absPosition, thingRect.width / 2, thingRect.height / 2);\n    // Apply via CSS\n    el.style.transform = `translate(${offsetPos.x}px, ${offsetPos.y}px)`;\n};\n/**\n * Given an array of class class names, this will cycle between them each time\n * it is called.\n *\n * Eg, assume `list` is: [ `a`, `b`, `c` ]\n *\n * If `el` already has the class `a`, the first time it is called, class `a`\n * is removed, and `b` added. The next time `b` is swapped for `c`. Once again,\n * `c` will swap with `a` and so on.\n *\n * If `el` is undefined or null, function silently returns.\n * @param el Element\n * @param list List of class names\n * @returns\n */\nexport const cycleCssClass = (el, list) => {\n    if (el === null || !el)\n        return;\n    if (!Array.isArray(list)) {\n        throw new TypeError(`List should be an array of strings`);\n    }\n    for (let index = 0; index < list.length; index++) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (el.classList.contains(list[index])) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            el.classList.remove(list[index]);\n            if (index + 1 < list.length) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                el.classList.add(list[index + 1]);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                el.classList.add(list[0]);\n            }\n            return;\n        }\n    }\n    el.classList.add(list[0]);\n};\n/**\n * Source: https://zellwk.com/blog/translate-in-javascript\n * @param domQueryOrEl\n */\nexport const getTranslation = (domQueryOrEl) => {\n    // Source:\n    // https://raw.githubusercontent.com/zellwk/javascript/master/src/browser/dom/translate-values.js\n    const el = resolveEl(domQueryOrEl);\n    const style = window.getComputedStyle(el);\n    const matrix = style.transform;\n    // No transform property. Simply return 0 values.\n    if (matrix === `none` || typeof matrix === `undefined`) {\n        return {\n            x: 0,\n            y: 0,\n            z: 0,\n        };\n    }\n    // Can either be 2d or 3d transform\n    const matrixType = matrix.includes(`3d`) ? `3d` : `2d`;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    const matrixValues = (/matrix.*\\((.+)\\)/.exec(matrix))[1].split(`, `);\n    // 2d Matrixes have 6 values\n    // Last 2 values are X and Y.\n    // 2d Matrixes does not have Z value.\n    if (matrixType === `2d`) {\n        return {\n            x: Number.parseFloat(matrixValues[4]),\n            y: Number.parseFloat(matrixValues[5]),\n            z: 0,\n        };\n    }\n    // 3d Matrixes have 16 values\n    // The 13th, 14th, and 15th values are X, Y, and Z\n    if (matrixType === `3d`) {\n        return {\n            x: Number.parseFloat(matrixValues[12]),\n            y: Number.parseFloat(matrixValues[13]),\n            z: Number.parseFloat(matrixValues[14]),\n        };\n    }\n    return { x: 0, y: 0, z: 0 };\n};\n/**\n * Creates an element after `sibling`\n * ```\n * const el = createAfter(siblingEl, `DIV`);\n * ```\n * @param sibling Element\n * @param tagName Element to create\n * @returns New element\n */\nexport const createAfter = (sibling, tagName) => {\n    const el = document.createElement(tagName);\n    sibling.parentElement?.insertBefore(el, sibling.nextSibling);\n    return el;\n};\n/**\n * Creates an element inside of `parent`\n * ```\n * const newEl = createIn(parentEl, `DIV`);\n * ```\n * @param parent Parent element\n * @param tagName Tag to create\n * @returns New element\n */\nexport const createIn = (parent, tagName) => {\n    const el = document.createElement(tagName);\n    parent.append(el);\n    return el;\n};\n/**\n * Remove all child nodes from `parent`\n * @param parent\n */\nexport const clear = (parent) => {\n    let c = parent.lastElementChild;\n    while (c) {\n        c.remove();\n        c = parent.lastElementChild;\n    }\n};\n/**\n * Copies string representation of object to clipboard\n * @param object\n * @returns Promise\n */\nexport const copyToClipboard = (object) => {\n    const p = new Promise((resolve, reject) => {\n        //const json = JSON.stringify(obj, null, 2);\n        const string_ = JSON5.stringify(object);\n        navigator.clipboard.writeText(JSON.stringify(string_)).then(() => {\n            resolve(true);\n        }, (error) => {\n            console.warn(`Could not copy to clipboard`);\n            console.log(string_);\n            reject(new Error(error));\n        });\n    });\n    return p;\n};\n/**\n * Inserts `element` into `parent` sorted according to its HTML attribute `data-sort`.\n *\n * Assumes:\n * * Every child of `parent` and `element`, has a `data-sort` attribute. This is the basis for sorting.\n * * `parent` starts off empty or pre-sorted.\n * * Order of `parent`'s children is not changed (ie it always remains sorted)\n * @param parent Parent to insert into\n * @param element Element to insert\n */\nexport const insertSorted = (parent, element) => {\n    const elSort = element.getAttribute(`data-sort`) ?? ``;\n    let elAfter;\n    let elBefore;\n    for (const c of parent.children) {\n        const sort = c.getAttribute(`data-sort`) ?? ``;\n        if (elSort >= sort)\n            elAfter = c;\n        if (elSort <= sort)\n            elBefore = c;\n        if (elAfter !== undefined && elBefore !== undefined)\n            break;\n    }\n    if (elAfter !== undefined) {\n        elAfter.insertAdjacentElement(`afterend`, element);\n    }\n    else if (elBefore === undefined) {\n        parent.append(element);\n    }\n    else {\n        elBefore.insertAdjacentElement(`beforebegin`, element);\n    }\n};\n/**\n * Creates a DOM tree, based on provided data.\n *\n * This will create new DOM elements if needed, update\n * existing ones or remove them if the value is no longer present.\n *\n *\n * @param parentEl\n * @param list Values to create elements for\n * @param createUpdate Function to create/update elements based on a value\n */\nexport const reconcileChildren = (parentEl, list, createUpdate) => {\n    if (typeof parentEl === `undefined`)\n        throw new Error(`Param 'parentEl' is undefined`);\n    if (parentEl === null)\n        throw new Error(`Param 'parentEl' is null`);\n    const seen = new Set();\n    for (const [key, value] of list) {\n        const id = `c-${key}`;\n        const el = parentEl.querySelector(`#${id}`);\n        const finalEl = createUpdate(value, el);\n        if (el !== finalEl) {\n            finalEl.id = id;\n            parentEl.append(finalEl);\n        }\n        seen.add(id);\n    }\n    const prune = [];\n    for (const child of parentEl.children) {\n        if (!seen.has(child.id)) {\n            prune.push(child);\n        }\n    }\n    // for (let index = 0; index < parentEl.children.length; index++) {\n    //   const c = parentEl.children[ index ] as HTMLElement;\n    //   if (!seen.has(c.id)) {\n    //     prune.push(c);\n    //   }\n    // }\n    for (const p of prune)\n        p.remove();\n};\n/**\n * Gets a HTML element by id, throwing an error if not found\n * @param id\n * @returns\n */\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-type-parameters\nexport const byId = (id) => {\n    const element = document.getElementById(id);\n    if (element === null)\n        throw new Error(`HTML element with id '${id}' not found`);\n    return element;\n};\n","export * as DataTable from './data-table.js';\nexport * as DragDrop from './drag-drop.js';\nexport * as Forms from './forms.js';\nexport * from './css-variables.js';\nexport * from './css.js';\nexport * from './data-display.js';\nexport * from './el.js';\nexport * from './element-sizing.js';\nexport * from './error-handler.js';\nexport * from './inline-console.js';\nexport * from './log.js';\nexport * from './query.js';\nexport * from './resolve-el.js';\nexport * from './set-property.js';\nexport * from './shadow-dom.js';\nexport * from './tabbed-panel.js';\nexport * from './utility.js';\n"],"mappings":"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"}