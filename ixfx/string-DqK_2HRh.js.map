{"version":3,"file":"string-DqK_2HRh.js","names":["value: unknown","range: StringGuardRange"],"sources":["../../../ixfx/packages/guards/src/string.ts"],"sourcesContent":["import type { Result } from \"./types.js\";\n\nexport type StringGuardRange = `` | `non-empty`\n\n/**\n * Throws an error if parameter is not an string\n * @param value\n * @param parameterName\n */\nexport const stringTest = (value: unknown, range: StringGuardRange = ``, parameterName = `?`): Result<string, string> => {\n  if (typeof value !== `string`) return { success: false, error: `Param '${ parameterName } is not type string. Got: ${ typeof value }` };\n  switch (range) {\n    case `non-empty`:\n      if (value.length === 0) return { success: false, error: `Param '${ parameterName } is empty` };\n      break;\n  }\n  return { success: true, value };\n};\n\n// export const throwStringTest = (value: unknown, range: StringGuardRange = ``, parameterName = `?`) => {\n//   throwFromResult(stringTest(value, range, parameterName));\n// }\n\n"],"mappings":";;;;;;AASA,MAAa,aAAa,CAACA,OAAgBC,SAA2B,GAAG,iBAAiB,OAA+B;AACvH,YAAW,WAAW,QAAS,QAAO;EAAE,SAAS;EAAO,QAAQ,SAAU,cAAe,mCAAoC,MAAO;CAAG;AACvI,SAAQ,OAAR;EACE,MAAM;AACJ,OAAI,MAAM,WAAW,EAAG,QAAO;IAAE,SAAS;IAAO,QAAQ,SAAU,cAAe;GAAY;AAC9F;CACH;AACD,QAAO;EAAE,SAAS;EAAM;CAAO;AAChC"}