{"version":3,"file":"to-string-DHD_4jl_.js","names":["itemToMakeStringFor: V","object: any"],"sources":["../../packages/core/src/to-string.ts"],"sourcesContent":["\n// Via Vuejs\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString\nconst toTypeString = (value: unknown): string =>\n  objectToString.call(value)\nexport const isMap = (value: unknown): value is Map<any, any> =>\n  toTypeString(value) === `[object Map]`\nexport const isSet = (value: unknown): value is Set<any> =>\n  toTypeString(value) === `[object Set]`\n\n/**\n * A default converter to string that uses JSON.stringify if its an object, or the thing itself if it's a string\n */\nexport const toStringDefault = <V>(itemToMakeStringFor: V): string =>\n  typeof itemToMakeStringFor === `string`\n    ? itemToMakeStringFor\n    : JSON.stringify(itemToMakeStringFor);\n\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const defaultToString = (object: any): string => {\n  //ECMA specification: http://www.ecma-international.org/ecma-262/6.0/#sec-tostring\n  if (object === null) return `null`;\n  if (typeof object === `boolean` || typeof object === `number`) {\n    return object.toString();\n  }\n\n  if (typeof object === `string`) return object;\n  if (typeof object === `symbol`) throw new TypeError(`Symbol cannot be converted to string`);\n  return JSON.stringify(object);\n};"],"mappings":";;;;AAcA,MAAa,kBAAkB,CAAIA,+BAC1B,yBAAyB,UAC5B,sBACA,KAAK,UAAU,oBAAoB;AAGzC,MAAa,kBAAkB,CAACC,WAAwB;AAEtD,KAAI,WAAW,KAAM,SAAQ;AAC7B,YAAW,YAAY,mBAAmB,YAAY,QACpD,QAAO,OAAO,UAAU;AAG1B,YAAW,YAAY,QAAS,QAAO;AACvC,YAAW,YAAY,QAAS,OAAM,IAAI,WAAW;AACrD,QAAO,KAAK,UAAU,OAAO;AAC9B"}